<?xml version='1.0' standalone='no'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://mapserver.gis.umn.edu/mdp/docbkx412/docbookx.dtd">
<article>
   <articleinfo>
      <title>PHP Mapscript 3.5 By Example HOWTO</title>
      <author>
         <firstname>Vinko</firstname>
         <surname>Vrsalovic</surname>
         <affiliation>
            <address>
               <email>v@w.cl</email>
            </address>
         </affiliation>
      </author>

      <abstract>
         <para>This document gives a step by step explanation of PHP Mapscript 3.5 objects and their methods. 
         <emphasis>A basic knowledge of MapServer<ulink url="http://mapserver.gis.umn.edu/mapfile.html">map files</ulink>
          and familiarity with the <ulink url="http://www.php.net">PHP</ulink> (scripting) and HTML (markup) languages are
          assumed.</emphasis></para>
         <para>Information given here refers to PHP MapScript version 3.5.</para>
         <para>Last Updated: 08-07-2001</para>
      </abstract>
   </articleinfo>

   <sect1 id='intro'>
      <title>Introduction</title>

      <para>The use of PHP MapScript (from this point on, just MapScript) to build MapServer applications will be demononstrated through
      step by step explanations of a series of real life examples. After working through this document, you will be able to 
      use the examples given here to build basic MapScript applications.</para>
      
      <para>The following is the list of required knowledge and installed software:</para>

	  <sect2 id='instsw'>
	  	<title>Installed Software</title>

      <itemizedlist>
         <listitem>
            <para>The MapScript software, version 3.5, is installed and functioning on a web server.  (See the
            <ulink url="phpmapscript-install-howto.html">MapServer PHP/MapScript Installation HOWOTO</ulink></para>
         </listitem>
         <listitem>
            <para>The PHP language (hopefully the latest version) is installed and functioning on the same web server.</para>
         </listitem>
      </itemizedlist>
      </sect2>

      <sect2 id='reqkno'>
	  	<title>Required Knowledge</title>

      <itemizedlist>
         <listitem>
            <para>Familiarity with PHP.</para>
         </listitem>
         <listitem>
            <para>Familiarity with HTML: forms, tables, and the like.</para>
         </listitem>
         <listitem>
            <para>Familiarity with MapServer <ulink url="mapfile-reference.html">map files</ulink>.</para>
         </listitem>
		 <listitem>
            <para>Familiarity with ESRI shapefiles.</para>
         </listitem>
      </itemizedlist>

      </sect2>
      <para>You should also refer to the MapScript documentation at <ulink url="http://www2.dmsolutions.ca/webtools/php_mapscript/php_mapscript_docs35.html">DM Solutions</ulink>
      or in the README file in the mapscript/php3 directory of the MapServer distribution.</para>
   </sect1>

	<sect1 id="begin">
		<title>Our first application</title>
		
		<para>This first example will simply display a shapefile on a web page using a map file.</para>
		<sect2 id="begmap">

		<title>The Map File</title>

		<para> Here is the map file: </para>

		<programlisting>
		NAME FIRSTMAP
		SIZE 400 400
		STATUS ON
		SYMBOLSET ./symbols/symbols.sym
		EXTENT -198 -98.6811798095703 198 92.3047760009766
		UNITS METERS
		SHAPEPATH "data"
			
		WEB
			IMAGEPATH "/var/www/html/maps/tmp/"
			IMAGEURL "/tmp/"
		END
		
		PROJECTION
  			"proj=utm"
  			"ellps=GRS80"
		END
		
		LAYER
			NAME countries
			TYPE POLYGON
			STATUS ON
			DATA country
			CLASS
				COLOR 10 50 100
				OUTLINECOLOR 200 200 200
			END
		END
		
		END
		</programlisting>

		<para> Here we have a map with a single layer with the shapefile called <filename>country</filename> located in the subdirectory
		called <filename>data</filename>. The symbols are located in the <filename>symbols</filename> subdirectory. All locations are 
		relative to the location of the map file. The web section is used to define where the images will be saved and the URL of
                the images.</para>

		<para> Since the example shapefiles are in geographic coordinates (lat-lon), we must project them to display them in a
                MapServer Application. That's what the PROJECTION section does.
		If you don't have MapScript compiled with PROJ.4 you may use your own shapefiles for this example.  Be sure to edit
                the mapfile accordingly.</para>
		</sect2>

		<sect2 id="begphp">
		<title>Displaying the map with MapScript</title>		
		<para> To display a map, the following MapScript objects and methods will be used:</para>
		<itemizedlist>
			<listitem>
				<para>MapObj object</para>
			</listitem>
			<listitem>
				<para>imageObj object</para>
			</listitem>
		</itemizedlist>

		<para>MapObj methods:</para>

		<itemizedlist>
			<listitem>
				<para>The constructor method: MapObj ms_newMapObj(string map_file_name)</para>
			</listitem>
			<listitem>
				<para>The draw method: imageObj draw()</para>
			</listitem>
		</itemizedlist>

		<para>imageObj methods:</para>

		<itemizedlist>
			<listitem>
				<para>The saveWebImage method: string saveWebImage(int type, int transparent, int interlace, int quality)</para>
			</listitem>
		</itemizedlist>

		<para> The MapScript code looks like this: </para>
		<programlisting>
		1 &lt;?php
		
		2 dl('php_mapscript.so'); 
		
		3 $map_path="/var/www/html/maps/example1/";
		4 $map = ms_newMapObj($map_path."example1.map");
		5 $image=$map->draw();
		6 $image_url=$image->saveWebImage(MS_PNG,1,1,0);
		
		7 ?&gt;
		
		8  &lt;HTML&gt;
		9  	&lt;HEAD&gt;
		10 		&lt;TITLE&gt;Example 1: Displaying a map&lt;/TITLE&gt;
		11 	&lt;/HEAD&gt;
		12 	&lt;BODY&gt;
		13 		&lt;IMG SRC=&lt;?php echo $image_url; ?&gt; &gt;
		14 	&lt;/BODY&gt;
		15 &lt;/HTML&gt;
		</programlisting>

		<para>Throughout this document we will use the convention of numbering all non-empty lines of code.</para>


		<para> This code will render an image corresponding to the shapefile <filename>country</filename> and display it on a HTML page.</para>
		<para> Here is the explanation. </para>

		<itemizedlist>
			<listitem>
				<para>Line 2 loads the MapScript extension (you may not need it if your php.ini file is configured to automatically load it).</para>
			</listitem>
			<listitem>
				<para>Line 3 declares a variable that holds the absolute path for the map file (just to be sure that we'll open the right map file).</para>
			</listitem>
			<listitem>
				<para>Line 4 creates an instance of the MapObj object using the constructor. As you can see, the constructor receives the location of the map file as its only parameter (the map file is called <filename>example1.map</filename>).</para>
			</listitem>
			<listitem>
				<para>Afterwards we call the draw method of the map object to render the image defined by the map file (line 5). The result (an imageObj) is saved in the $image variable.</para>
			</listitem>
			<listitem>
				<para>Line 6 calls the saveWebImage method to generate the image file.  It returns a string which represents the URL as defined in the mapfile; in this case it is /tmp/filename.png. SaveWebImage uses the following parameters:
                                <orderedlist>
                                	<listitem><para>
					the first parameter defines the type of image generated (in this case PNG),
                                        </para></listitem>
                                	<listitem><para>
                                             the second determines if the image will be transparent (1 means yes), 
                                        </para></listitem>
                                	<listitem><para>
					the third determines if the image file will be interlaced (1 means yes),
                                        </para></listitem>
                                	<listitem><para>
						the fourth is ignored except when the image type is MS_JPEG.</para>
                                        </listitem>
                                 </orderedlist>
                                 </para>
			</listitem>
			<listitem>
				<para>The rest of the lines are pure HTML, except line 13, which defines the source URL of the image stored in $image_url.</para>
			</listitem>
		</itemizedlist>

		<para>Test this application on your system, to check that it really works and to solve the problems that may arise on your
		particular configuration before moving on to the more complex examples.</para>
		
		<para>The output (using the <filename>country</filename> shapefile) should look like this:</para>
		<figure>
			<title>Example 1 Output</title>
			<graphic fileref="http://mapdemo.selperchile.cl/tmp/997295865108751.png"></graphic>
		</figure>

		</sect2>
	</sect1>

	<sect1 id='letszoom'>
		<title>Let's Zoom and Pan!</title>
		<para> Now we'll add zoom and pan capabilities to the code. </para>
		<para> Here is the list of <emphasis>new</emphasis> methods and objects called.</para>
		<para> New Objects: </para>

		<itemizedlist>
			<listitem>
				<para> pointObj </para>
			</listitem>
			<listitem>
				<para> rectObj </para>
			</listitem>
		</itemizedlist>

		<para> New Methods and Members called: </para>

		<itemizedlist>
			<listitem>
				<para> The zoompoint method of the map object: void zoompoint(int nZoomFactor, pointObj oPixelPos, int nImageWidth, int nImageHeight, rectObj oGeorefExt);</para>
			</listitem>
			<listitem>
				<para> The setextent method of the map object: $map->setextent(double minx, double miny, double maxx, double maxy);</para>
			</listitem>
			<listitem>
				<para> The extent, width and height members of the map object</para>
			</listitem>
			<listitem> 
				<para>The constructors of RectObj and PointObj: $point = ms_newPointObj(); $rect = ms_newRectObj();</para>
			</listitem>
			<listitem>
				<para>The setXY method of the point object: $point->setXY(double x_coord, double y_coord);</para>
			</listitem>
			<listitem>
				<para>The setextent method of the rectangle object: $rect->setextent(double minx, double miny, double maxx, double maxy);</para>
			</listitem>
		</itemizedlist>

		<para>The map file remains the same as presented in the previous example.</para>
		<para>Here is the new code:</para>

		<programlisting>
		not written yet
		</programlisting>

	</sect1>

	   <sect1 id='docinfo'>
      <title>About This Document</title>

      <sect2 id='copyright'>
         <title>Copyright Information</title>

         <para>Copyright (c) 2001 Vinko Vrsalovic.</para>

         <para>This documentation is covered by the same Open Source license as the MapServer software. See MapServer's 
         <ulink url='http://mapserver.gis.umn.edu/license.html'>License and Credits</ulink>

         page for the complete text.</para>
      </sect2>

      <sect2 id='disclaimer'>
         <title>Disclaimer</title>

         <para>No liability for the contents of this document can be accepted. Use the concepts, examples and other content at your own risk. As this is a new edition of this document, there may be errors and inaccuracies that may be damaging to your system. Although this is highly unlikely, the author(s) do not take any responsibility for that: proceed with caution.</para>
      </sect2>

      <sect2 id='acknowledgmements'>
         <title>Acknowledgments</title>

         <para>This document is dedicated to the people who made MapServer and MapScript a reality. The dedication also goes to
         the members of the <ulink url='http://mapserver.gis.umn.edu/support.html'>mapserver-users mailing list</ulink>, that helped me getting started with MapServer/MapScript.</para>
      </sect2>

<!-- Section2: feedback -->
      <sect2 id='feedback'>
         <title>Feedback</title>

         <para>Input is really appreciated. Send any comments or suggestions to the mantainer at 
         <email>v@w.cl</email>

         .</para>
      </sect2>
   </sect1>
</article>

