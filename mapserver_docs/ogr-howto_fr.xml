<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://mapserver.gis.umn.edu/mdp/docbkx412/docbookx.dtd">
<!-- $Id$ -->
<article>
	<articleinfo>
		<!-- insert title here, include the word HOWTO -->
		<title>HOWTO pour utiliser OGR dans MapServer</title>
		<author>
			<firstname>Jeff</firstname>
			<surname>McKenna</surname>
			<affiliation>
				<orgname>DM Solutions Group Inc.</orgname>
				<address>
					<email>mckenna@dmsolutions.ca</email>
				</address>
			</affiliation>
		</author>
		<date>05-03-2003</date>
		<othercredit>
			<contrib>Traduction</contrib>
			<firstname>Franz-Albert</firstname>
			<surname>Van Den Bussche</surname>
			<affiliation>
				<orgname>Club des Utilisateurs de Linux et des logiciels libres de Toulouse et des environs</orgname>
				<orgdiv>(CULTe)</orgdiv>
				<address>
					<email>franz@favdb.net</email>
				</address>
			</affiliation>
		</othercredit>
		<othercredit>
			<contrib>Relecture de la traduction</contrib>
			<firstname>Nathalie</firstname>
			<surname>Vielmas</surname>
			<affiliation>
				<orgname>Club des Utilisateurs de Linux et des logiciels libres de Toulouse et des environs</orgname>
				<orgdiv>(CULTe)</orgdiv>
				<address>
					<email>nath@favdb.net</email>
				</address>
			</affiliation>
		</othercredit>
		<abstract>
			<!-- a short description of the contents of the doc -->
			<para>
                 Ce document décrit les procédures pour l'utilisation de sources de données vectorisées OGR dans des applications MapServer.
               </para>
			<para>Dernière mise à jour: 05/03/2003</para>
		</abstract>
	</articleinfo>
	<sect1 id="intro">
		<title>Introduction</title>
		<para>
             Depuis la version 3.5, MapServer dispose de la possibilIté d'accéder à des ensembles de données vectorisées, 
            d'autres format Shapefile (fichier de forme) que celui d'origine en utilisant la bibliothèque OGR.  
             Le document suivant décrit la procédure pour implémenter le support OGR dans des applications MapServer.
          </para>
		<para>
			<emphasis>Notez qu'une version expérimentale du support OGR avait été inclus dans la version 3.4 de MapServer
            mais cette implémentation initiale avait quelques limitations et n'est pas illustrée dans ce document.</emphasis>
		</para>
		<para>
             Il est considéré dans ce document que vous connaissez déjà certains aspects de MapServer:
          </para>
		<itemizedlist>
			<listitem>
				<para>
                    Développement d'applications MapServer et en particulier le paramétrage des fichiers .map.
                </para>
			</listitem>
			<listitem>
				<para>
					Une certaine dextérité pour la compilation si vous avez déjà accès à une installation précompilée
                    et que vous avez besoin de compiler votre propre copie de MapServer avec le support OGR.
				</para>
			</listitem>
		</itemizedlist>
		<!-- Section2: What is OGR? -->
		<sect2 id="definition">
			<title>What is OGR?</title>
			<para>
                      La bibliothèque de fonctions OGR simples est une bibliothèque C++ en open source (et les outils en ligne de commande) 
                      fournissant l'accès en lecture (et parfois en écriture) à différents formats de vecteurs 
                      comprenant les ESRI Shapefiles, et les formats MapInfo mid/mif et TAB.  
                    </para>
		</sect2>
		<!-- Section2: What does it add to MapServer? -->
		<sect2 id="addtition">
			<title>Qu'apporte OGR à MapServer?</title>
			<para>
                      La bibliothèque des fonctions OGR Simples permet aux utilisateurs MapServer d'afficher plusieurs types de fichiers de données vectorisées depuis leur format natif.
                      Par exemple, les données MapInfo Mid/Mif et TAB n'ont pas besoin d'être converties en fichiers ESRI Shapefiles 
                      quand le support OGR est utilisé avec MapServer.
               </para>
		</sect2>
		<!-- Section2: What formats are supported? -->
		<sect2 id="supported">
			<title>Quels sont les formats supportés?</title>
			<para>
                Voyez <ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/ogr_formats.html">http://gdal.velocet.ca/projects/opengis/ogrhtml/ogr_formats.html</ulink> pour 
                la liste à jour des formats supportés.
                A la date d'écriture de ce document, les formats suivants sont reconnus:
               </para>
			<itemizedlist>
				<listitem>
					<para>
						<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_avc.html">ArcInfo</ulink>,
				    </para>
				</listitem>
				<listitem>
					<para>
						<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_shapefile.html">ESRI Shapefiles</ulink>,
                        </para>
				</listitem>
				<listitem>
					<para>
						<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_s57.html">ensembles de données IHO S-57 datasets</ulink>,
				    </para>
				</listitem>
				<listitem>
					<para>
						<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_mitab.html">fichiers MapInfo TAB et  
					   MIF/MID</ulink>,
				    </para>
				</listitem>
				<listitem>
					<para>
						<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_dgn.html">fichiers Microstation DGN</ulink>,
				    </para>
				</listitem>
				<listitem>
					<para>
						<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_ogdi.html">vecteurs OGDI</ulink>,
				    </para>
				</listitem>
				<listitem>
					<para>
						<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_pg.html">PostgreSQL</ulink>,
				    </para>
				</listitem>
				<listitem>
					<para>
						<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_sdts.html">SDTS TVP</ulink> (Topological Vector Profile et Point Profile datasets),
				    </para>
				</listitem>
				<listitem>
					<para>
						<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_tiger.html">ensembles de fichiers TIGER/Line</ulink>,
				    </para>
				</listitem>
				<listitem>
					<para>
						<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_ntf.html">UK.NTF</ulink> (National Transfer Format).
				    </para>
				</listitem>
			</itemizedlist>
			<para>
				<emphasis>Note1: Quelques uns des formats ci-dessus (OGDI par exemple) ont des dépendances externes
                    et ne sont pas toujours inclus dans les distributions binaires précompilées de MapServer avec le support OGR.
                    </emphasis>
			</para>
			<para>
				<emphasis>Note2: Quelques uns des formats ci-dessus ne sont pas bien adaptés à l'accès aléatoire par nature,
                    c'est le cas des fichiers MapInfo MIF/MID qui sont au format TEXTE
                    et donneront de piètres performances pour une apllication oueb.  
                    D'un autre côté, quelques formats binaires comme le TAB sont bien plus adaptés à l'accès
                    aléatoire et donneront des performances comparables à l'accès natif des fichiers de forme dans Mapserver.
                    </emphasis>
			</para>
		</sect2>
		<!-- Section2: More information on the OGR project -->
		<sect2 id="information">
			<title>Comment avoir plus d'informations sur le projet OGR</title>
			<para>
                      Plus d'informations sur le projet OGR peuvent être trouvées sur  
                      <ulink url="http://gdal.velocet.ca/projects/opengis/">
                      http://gdal.velocet.ca/projects/opengis/</ulink>.
               </para>
			<para>
		            Le développeur principal de la bibliothèque OGR est Frank Warmerdam.
		        <address>
					<email>warmerdam@pobox.com</email>
				</address>
			</para>
			<para>
                      L'intégration de OGR dans MapServer a été réalisée par Daniel Morissette.
                  <address>
					<email>morissette@dmsolutions.ca</email>
				</address>
			</para>
		</sect2>
	</sect1>
	<!-- Section1: obtaining and installing -->
	<sect1 id="obtain">
		<title>Obtenir et compiler MapServer avec le support OGR</title>
		<para>
			<emphasis>A FAIRE: ceci est assez incomplet</emphasis>
			<itemizedlist>
				<listitem>
					<para>
						Suivez les instructions de la page OGR pour compiler/installer OGR (actuellement GDAL depuis que OGR est un composant de la bibliothèque GDAL):
                        <ulink url="http://gdal.velocet.ca/projects/opengis/">http://gdal.velocet.ca/projects/opengis/</ulink>.
                    </para>
				</listitem>
				<listitem>
					<para>
						Récupérez les source MapServer sur: <ulink url="http://mapserver.gis.umn.edu/dload.html">http://mapserver.gis.umn.edu/dload.html</ulink>.
                    </para>
				</listitem>
			</itemizedlist>
		</para>
		<para>
			 Pour les utilisateurs UNIX, voyez le fichier <emphasis>README.CONFIGURE</emphasis> dans les sources MapServer, ou voyez
			le UNIX/MapServer HOWTO sur <ulink url="http://mapserver.gis.umn.edu/doc/unix-install-howto.html">					http://mapserver.gis.umn.edu/doc/unix-install-howto.html</ulink>.  Si GDAL/OGR est normalement installé il devrait être suffisant d'ajouter --with-ogr à la ligne de configure avant de (re)construire MapServer.
	     </para>
		<para>
		     Pour les utilisateurs Windows, il est recommandé de rechercher un binaire précompilé sur le site MapServer
             sur <ulink url="http://mapserver.gis.umn.edu/win32binaries.html">http://mapserver.gis.umn.edu/win32binaries.html</ulink>.
             Si vous voulez compiler votre propre binaire voyez le fichier <emphasis>README.WIN32</emphasis> dans les sources MapServer.
	     </para>
	</sect1>
	<!-- Section1: Integration or developing  an application-->
	<sect1 id="integrate">
		<title>Integration du support OGR avec les applications MapServer</title>
		<para>
                Le seul changement qui est nécessaire pour intégrer le support OGR à une application MapServer
                est à faire dans le fichier .map.  Le paramètre LAYER DATA est élargi à trois paramètres (CONNECTIONTYPE OGR, CONNECTION et DATA). 
       	</para>
		<para>
			La syntaxe diffère selon le type de données à utiliser. Pour OGR, une source de données peut être autant un ensemble de fichiers qui partagent un nom de base commun (tel que .shp/.shx/.dbf pour les fichiers ArcView Shapefiles, ou
		     .tab/.map/.dat/.ind/.id pour les fichiers MapInfo TAB) ou un répertoire complet de fichiers (tel que TIGER).
		</para>
		<para>
			Voyons les "sources base-fichier" puis les "sources base-répertoire". Lors de l'accès aux sources de données base-fichier
			vous <emphasis>indiquez le nom de fichier</emphasis> ou un des fichiers de l'ensemble (par exemple roads.shp
			ou roads.tab) et lors de l'accès à une source de données base-répertoire vous
			<emphasis>indiquez le nom du répertoire</emphasis> et OGR lit tous les fichiers du répertoire
			comme une unique source de données contenant éventuellement plusieurs couches (comme les fichiers TIGER).
		</para>
		<para>
			Plusieurs pilotes OGR (comme SHP, TAB) peuvent avoir un double comportement, si ils sont 
			pointés sur un unique fichier alors ils opérent comme source de données base-fichier
			et s'ils pointent sur un répertoire alors ils opérent comme une source de données base-répertoire
			et donc chaque fichier du répertoire devient une nouvelle couche dans la source de données.
		</para>
		<para>
			Voyez la documentation OGR pour plus d'informations sur le format spécifique de fichier que vous utilisez: 
			<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/ogr_formats.html">								http://gdal.velocet.ca/projects/opengis/ogrhtml/ogr_formats.html</ulink>.
		</para>
		<sect2 id="binary">
			<title>Utilisation des sources de données OGR dans le MapFile</title>
			<para>
				La définition LAYER du fichier .map pour les sources base-fichier se présente comme suit:
			</para>
			<programlisting>
	LAYER
	   ...
	   CONNECTIONTYPE OGR
	   CONNECTION "&lt;datasource_name&gt;"
           DATA "&lt;layer_definition&gt;"
	   ...
	END
              </programlisting>
			<para>
				<emphasis>&lt;datasource_name&gt;</emphasis> est le nom de la source de données à lire et est déclaré par le mot clé CONNECTION.  L'organisation exacte dépend du pilote de format utilisé.
              Le pilote de format à utiliser est automatiquement sélectionné par OGR d'après la
              nature de la chaîne de caratères passée comme source de données, et/ou le format du fichier référencé.
      </para>
			<para>
				<itemizedlist>
					<listitem>
						<para>Pour les sources <emphasis>base-fichier</emphasis> c'est le nom du fichier, y compris l'extension, en utilisant
                  un chemin absolu, ou un chemin relatif. Les chemins relatifs sont interprétés par rapport au fichier .map.
                  Le SHAPEPATH est ignoré pour les sources de données OGR.</para>
					</listitem>
					<listitem>
						<para>Pour les sources de données <emphasis>base-répertoire</emphasis>, comme TIGER/Line, ou Arc/Info Binary Coverages c'est le
                  nom du répertoire contenant les fichiers.  Si le chemin est relatif il est interprété
                  par rapport au fichier .map.</para>
					</listitem>
					<listitem>
						<para>Pour les sources de données <emphasis>virtuelles</emphasis> comme les systèmes de base de données, et OGDI c'est la 
                  chaîne de caractères de connexion au service et généralement sans relation avec le système de fichiers. Par exemple, pour Oracle 
                  Spatial ce devrait être quelque chose comme "OCI:warmerda/Password@gdal800.velocet.ca".</para>
					</listitem>
				</itemizedlist>
			</para>
			<para>
				<emphasis>&lt;layer_definition&gt;</emphasis> est le nom, le numéro ou la définition SQL de la couche à utiliser depuis 
          la source de données.  Il est indiqué via le mot clé DATA dans le fichier .map.
      </para>
			<para>
				<itemizedlist>
					<listitem>
						<para><emphasis>Nom de couche</emphasis>: Le nom (insensible à la casse) de la couche peut être utilisé pour sélectionner la couche.</para>
					</listitem>
					<listitem>
						<para><emphasis>Numéro de couche</emphasis>: Le numéro de la couche (commençant à 0 pour la première couche) peut être utilisé
                  pour sélectionner la couche.  En générale le nom de la couche est privilégié puisqu'il est plus significatif.</para>
					</listitem>
					<listitem>
						<para><emphasis>Sans rien</emphasis>: Si aucun mot clé DATA n'est donné, ceci équivaut à la sélection de la couche 0.</para>
					</listitem>
					<listitem>
						<para><emphasis>SQL SELECT</emphasis>: Si l'instruction SQL SELECT est utilisée, ceci est interprété dans un pilote 
                  de manière spécifique pour essayer de générer une pseudo couche temporaire.  Pour plusieurs formats ce sous ensemble 
                  restreint de SQL est interprété dans OGR.  Pour les pilotes basés sur RDBMS (tel que PostGIS
                  et Oracle) ceci est passé à la base de données sous jacente. </para>
					</listitem>
				</itemizedlist>
			</para>
			<para>
          Le programme <link linkend="ogrinfo">OGRINFO</link> peut être utilisé pour chercher la liste des couches et leurs noms dans la source de données.
      </para>
		</sect2>
		<!-- Section2: Examples of Layer Definitions Using OGR -->
		<sect2 id="examples">
			<title>Exemples de définitions de couches utilisant OGR</title>
			<example>
				<title>
				Fichier MapInfo TAB
			</title>
				<programlisting>
	LAYER
	   NAME "Builtup_Areas_tab"
	   TYPE POLYGON
	   CONNECTIONTYPE OGR
	   CONNECTION "data/tab/092b06_builtup_a.tab"
	   STATUS ON
	   CLASS
	     ...
	   END
	...
	END
               </programlisting>
			</example>
			<example>
				<title>
				Fichier Microstation DGN utilisant &lt;layer_index&gt;
			</title>
				<para>
					La totalité du fichier DGN est représentée dans OGR comme une couche unique (voir 
					<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_dgn.html">						                    http://gdal.velocet.ca/projects/opengis/ogrhtml/drv_dgn.html</ulink> pour plus d'informations):
				</para>
				<programlisting>
	LAYER
	   NAME "Water_dgn"
	   TYPE POLYGON
	   CONNECTIONTYPE OGR
	   CONNECTION "data/dgn/wat.dgn"
           DATA "0"
	   STATUS ON
	   CLASS
	     ...
	   END
	...
	END
               </programlisting>
			</example>
			<example>
				<title>
                    Fichier TIGER/Line utilisant &lt;layer_name&gt;
               </title>
				<programlisting>
	LAYER
           NAME "Roads_tig"
           TYPE line
           CONNECTIONTYPE OGR
           CONNECTION "../data/tiger_michigan"
           DATA "CompleteChain"
           STATUS ON
           CLASS
             ...
           END
	END
               </programlisting>
			</example>
			<example>
				<title>
Répertoire de fichiers de forme utilisant SQL JOIN
                    </title>
				<programlisting>
	LAYER
	   NAME "Parks_cov"
	   TYPE POLYGON
           CONNECTIONTYPE OGR
           CONNECTION "data/shppoly"
           DATA "SELECT eas_id, idlink.Name FROM poly LEFT JOIN idlink ON poly.eas_id = idlink.eas_id"
	   STATUS ON
           CLASSITEM "idlink.Name"
           CLASS
             NAME "At Risk"
             COLOR 0 0 255
             OUTLINECOLOR 255 0 0
             EXPRESSION "_158_"
           END
           CLASS
             NAME "Normal"
             COLOR 0 255 0
             OUTLINECOLOR 255 0 0
           END
	...
	END
               </programlisting>
			</example>
		</sect2>
		<!-- Section2: How to Use OGRINFO -->
		<sect2 id="ogrinfo">
			<title>Comment utiliser "OGRINFO"</title>
			<para>
				OGRINFO est un composant de la distribution GDAL/OGR.  C'est un exécutable qui peut être utilisé 
                pour obtenir des informations de couche pour les fichiers supportés par OGR.  Les paramètres sont:
			</para>
			<programlisting>
	ogrinfo [-ro] [-q] datasource_name [layer [layer...]]
			</programlisting>
			<itemizedlist>
				<listitem>
					<para>
			     -ro ouvre le fichier en lecture seule (facultatif)
			  </para>
				</listitem>
				<listitem>
					<para>
			     -q exécution en mode silencieux, seul l'index de couche sera retourné (facultatif)
			  </para>
				</listitem>
				<listitem>
					<para>
			     datasource_name est le nom de fichier y compris l'extension (tel que roads.tab); pour les fichiers TIGER/Line, datasource_name
				est le répertoire contenant les fichiers TIGER (tel que ogrinfo TGR25001)
			  </para>
				</listitem>
			</itemizedlist>
			<sect3 id="example">
				<title>Exemples d'utilisation de "OGRINFO":</title>
				<example>
					<title>
                         Pour avoir la liste des couches dans un fichier:
			         </title>
					<programlisting>
    $ ogrinfo  popplace.tab

    Had to open data source read-only.
    INFO: Open of `popplace.tab'
    using driver `MapInfo File' successful.
    1: popplace (Point)
			    </programlisting>
					<para>
						<literallayout>   qui montre qu'il y a une couche point dans le fichier popplace.tab.</literallayout>
					</para>
				</example>
				<example>
					<title>
                        Pour avoir un dump (vidage) d'une couche spécifique, y compris des noms des champs, la projection, etc:
                   </title>
					<programlisting>
    $ ogrinfo popplace.tab popplace

    Had to open data source read-only.
    INFO: Open of `popplace.tab'
    using driver `MapInfo File' successful.

    Layer name: popplace
    Geometry: Point
    Feature Count: 497
    Layer SRS WKT: PROJCS["unnamed",GEOGCS["unnamed",DATUM["North ...snipped...
    AREA: Real (15.3)
    PERIMETER: Real (15.3)
    POPPLACE_: Real (11.0)
    POPPLACE_I: Real (15.0)
    NAME: String (50.0)
    OGRFeature(popplace):1
      AREA (Real) =           0.000
      PERIMETER (Real) =           0.000
      POPPLACE_ (Real) =           1
      POPPLACE_I (Real) =               1
      NAME (String) = Port Hope Simpson
      POINT (2437287.249 1153656.751)

    OGRFeature(popplace):2
      AREA (Real) =           0.000
      PERIMETER (Real) =           0.000
      POPPLACE_ (Real) =           2
      POPPLACE_I (Real) =               1
      NAME (String) = Hopedale

    ...
    ...
                </programlisting>
				</example>
				<example>
					<title>Pour avoir une liste des couches dans un répertoire TIGER/Line:</title>
					<programlisting>
    $ ogrinfo TGR25001
	
    Had to open data source read-only.
    INFO: Open of `TGR25001'
    using driver `TIGER' successful.
    1: CompleteChain (Line String)
    2: AltName (None)
    3: FeatureIds (None)
    4: ZipCodes (None)
    5: Landmarks (Point)
    6: AreaLandmarks (None)
    7: KeyFeatures (None)
    8: Polygon (None)
    9: EntityNames (Point)
    10: IDHistory (None)
    11: PolyChainLink (None)
    12: PIP (Point)
    13: TLIDRange (None)
    14: ZipPlus4 (None)				
					</programlisting>
					<para>
						<literallayout>   L'exemple précédent montre qu'il y a 14 couches dans le répertoire TGR25001.</literallayout>
					</para>
				</example>
				<example>
					<title>Pour avoir un dump d'une couche TIGER spécifique, y compris les noms des champs, la projection, la zone d'étendue, etc:</title>
					<programlisting>
    $ ogrinfo TGR25001 Landmarks

    Had to open data source read-only.
    INFO: Open of `TGR25001'
    using driver `TIGER' successful.
	
    Layer name: Landmarks
    Geometry: Point
    Feature Count: 777
    Extent: (-70.674324, 41.519817) - (-69.969211, 42.046868)
    Layer SRS WKT: GEOGCS["NAD83",DATUM["North_American_Datum_1983",
    SPHEROID["GRS 1980",6378137,298.257222101]],PRIMEM["Greenwich",0],
          UNIT["degree",0.0174532925199433]]
    MODULE: String (8.0)
    FILE: String (5.0)
    STATE: Integer (2.0)
    COUNTY: Integer (3.0)
    LAND: Integer (10.0)
    SOURCE: String (1.0)
    CFCC: String (3.0)
    LANAME: String (30.0)
    OGRFeature(Landmarks):1
	  MODULE (String) = TGR25001
	  FILE (String) = (null)
	  STATE (Integer) = 25
	  COUNTY (Integer) = 1
	  LAND (Integer) = 1
	  SOURCE (String) = J
	  CFCC (String) = H31
	  LANAME (String) = Northeast Pond
    ...
    ...
					</programlisting>
				</example>
			</sect3>
		</sect2>
		<sect2 id="queries">
			<title>Interoogation à travers le format OGR</title>
			<para>
				Les couches OGR peuvent être interrogées de la même manière que les fichiers de forme normaux dans MapServer.
			</para>
		</sect2>
		<sect2 id="tileindex">
			<title>TILEINDEX avec OGR</title>
			<para>
Les couches OGR peuvent utiliser les index de carroyage de manière similaire aux couches basées sur les fichiers de forme.  Le mot clé TILEINDEX contiendra la chaîne de connexion pour le
fichier d'index de carroyagee.  Le fichier index peut être de n'importe lequel des formats OGR, 
y compris les fichiers de forme.
</para>
			<para>
Le mot clé TILEITEM dans la définition LAYER indique 
quel attribut du fichier index de carroyage sera utilisé comme source de données
de localisation.  S'il est omis, la valeur par défaut de TILEITEM est "location".  La valeur dans
le champs location sera la chaîne de connexion identique à celle que vous aurez dans le 
champs CONNECTION pour les couches OGR.  Le mot clé CONNECTION n'est
pas nécessaire (et sera ignoré) pour les couches untilisant un type de connexion OGR
et ayant le mot clé TILEINDEX. 
</para>
			<para>
Les fichiers Tileindex peuvent être préparés par un SIG externe, ou en utilisant l'utilitaire
ogrtindex.  Des détails peuvent être trouvés sur la page des utilitaires OGR sur
<ulink url="http://gdal.velocet.ca/projects/opengis/ogrhtml/ogr_utilities.html">http://gdal.velocet.ca/projects/opengis/ogrhtml/ogr_utilities.html</ulink>.
</para>
			<para>
Ce qui suit est un  simple exemple d'une couche pont utilisant un index de carroyage.
</para>
			<programlisting>
LAYER
  NAME "ogr_points"
  TYPE POINT
  CONNECTIONTYPE OGR
  TILEINDEX "PIP_ogr_tiles.shp,0"
  STATUS ON
  CLASS
    SYMBOL "default-circle"
    COLOR 255 0 0
    SIZE 6
  END
END
</programlisting>
			<para>
Les couches de carroyage OGR supportent toutes les requêtes et les mécanismes de correspondance d'attributs,
y compris à partir de MapScript; de toute manière, ceci n'a pas été testé intensivement 
comme en Avril/2002.  N'hésitez pas à faire remonter vos problèmes via le Bugzilla MapServer.  Si
le support de projection automatique est utilisé pour les couches d'index de carroyage OGR, le tileindex est
lu pour la projection (pas les carreaux eux-mêmes).   Des problèmes peuvent (ou pas)
être rencontrés si les carreaux ont différents schémas (différents ensembles d'attributs).
</para>
		</sect2>
		<sect2 id="formatinfo">
			<title>Informations spécifiques sur les formats</title>
			<para>
                   Cette partie contient les informations spécifiques qui sont découvertes au fur et à mesure.
              </para>
		</sect2>
	</sect1>
	<sect1 id="styleitem">
		<title>STYLEITEM "AUTO" - restitution des couches en utilisant une information de style depuis le fichier OGR</title>
		<para>
			<emphasis>NOTE: cette fonction est seulement disponible pour les fichiers MapInfo TAB et Microstation DGN pour l'instant,
		  mais éventuellement d'autres formats qui intègrent des couleurs et styles au niveau forme peuvent aussi être supportés à travers 
		  OGR.</emphasis>
		</para>
		<para>
	       Dans MapServer, ArcView, et d'autres applications basées sur des fichiers de forme, couleurs et
		  styles sont habituellement définis au niveau de la couche.  Ceci signifie que les formes
		  dans une couche donnée sont habituellement restituées en utilisant les mêmes couleurs et les mêmes styles.
	     </para>
		<para>
		  D'un autre côté, quelques formats supportés par OGR, comme MapInfo TAB, ont 
		  une information couleur et style attachée à chaque élément.  OGR ajoute le support
		  pour le paramètre de couche 'STYLEITEM "AUTO"' qui vous permet de demander que
		  les éléments d'une couche  soient restitués en utilisant les couleurs et styles issus
	         de la source de données au lieu d'être déterminés par CLASS comme c'est traditionnellement
 		  le cas avec MapServer.
		</para>
		<sect2>
			<title>Comment implémenter</title>
			<para>
              Pour avoir une restitution de couche en utilisant les couleurs et styles issus de la source de données OGR, vous devez faire
              ce qui suit:
            </para>
			<itemizedlist>
				<listitem>
					<para>
			  Votre définition de couche doit contenir le paramètre <function>STYLEITEM "AUTO"</function>.	
			</para>
				</listitem>
				<listitem>
					<para>
			  Votre définition de couche a besoin de contenir au moins un élément <function>CLASS</function> (qui peut être vide) et facultativement
			<function>CLASSITEM</function> pour correspondre aux expressions si votre <function>CLASS</function> contient une expression.
  			  Le <function>CLASS</function> vide dans la couche sera mis à jour 
			  dynamiquement à l'exécution pour contenir les couleurs et styles issus de la source de données pour chaque forme.
			</para>
				</listitem>
			</itemizedlist>
		</sect2>
		<sect2>
			<title>Exemples</title>
			<example>
				<title>Définition de couche utilisant STYLEITEM "AUTO" sans un CLASSITEM</title>
				<programlisting>
    LAYER
       NAME "test_dgn"
       STATUS ON
       TYPE POLYGON
       CONNECTIONTYPE OGR
       CONNECTION "../data/dgn/test.dgn"

       # This enables use of colors and styles from the source file.
       STYLEITEM "AUTO"

       # Define an empty class that will be filled at runtime from the color and
       # styles read on each shape in the source file.
       CLASS
       END
   END  # layer
                    </programlisting>
			</example>
			<example>
				<title>Définition de couche utilisant STYLEITEM "AUTO" avec un CLASSITEM</title>
				<programlisting>
    LAYER
       NAME "Builtup_Areas_tab"
       TYPE POLYGON
       CONNECTIONTYPE OGR
       CONNECTION "data/tab/092b06_builtup_a.tab"
       STATUS ON

       # This enables use of colors and styles from the source file.
       STYLEITEM "AUTO"

       # Define an empty class that will be filled at runtime from the color and
       # styles read on each shape in the source file.
       CLASSITEM "CATEGORY"
       CLASS
          EXPRESSION "1"
       END
    END			
			</programlisting>
			</example>
			<note>
				<title>Note:</title>
				<para>
	    Les CLASS EXPRESSION sont actives, donc il est possible d'interroger et classifier les couches qui utilisent STYLEITEM "AUTO".  
		La seule différence est qu'au lieu d'utiliser des définitions statiques de classe, les couleurs et styles seront lus dans le fichier de données.
	    </para>
			</note>
		</sect2>
		<sect2>
			<title>Important Notes</title>
			<para>
				NOTE 1: Bien que MapInfo et d'autres sources de données OGR puissent supporter des couches mélangeant différents
		types de géométrie(des points, lignes et polygones dans le même fichier) MapServer
		ne le supporte pas pour l'instant.  Aussi vous devez définir un 'TYPE'  de couche
		et vous assurer que les formes de source de données OGR sont compatibles avec
		ce type de couche, sinon MapServer peut produire une erreur au sujet de l'incompatibilité
		des types de géométrie à l'exécution.
			</para>
			<para>
				NOTE 2: Du fait de la nature dynamique de cette fonctionnalité, elle n'est pas compatible avec le
		cache d'étiquette, aussi le cache d'étiquette est automatiquement désactivé pour les couches qui
		utilisent 'STYLEITEM "AUTO"'.
			</para>
			<para>
				NOTE 3: Quand vous employez STYLEITEM AUTO, MapServer tente de faire correspondre les noms de symbole
				retournés par OGR avec ceux du fichier de symboles.  Pour une solution rapide, essayez
				en utilisant le fichier symbole suivant:
			</para>
			<para>
				<ulink url="http://www2.dmsolutions.ca/msapps/yk_demo/etc/symbols_mapinfo.sym">
				http://www2.dmsolutions.ca/msapps/yk_demo/etc/symbols_mapinfo.sym</ulink>
			</para>
			<para>
				Le nom des symboles retourné par OGR à MapServer depend du format du fichier.
				Dans le cas de fichiers MapInfo, il sera:
			</para>
			<itemizedlist>
				<listitem>
					<para>
						Pour les symboles "old-style" (par défaut les symboles MapInfo 3.0 sont numérotés de 32 à
  						67) le nom de symbole sera 'mapinfo-sym-##' où '##' est le numéro de symbole,
  						comme 'mapinfo-sym-32'.
					</para>
				</listitem>
			</itemizedlist>
			<itemizedlist>
				<listitem>
					<para>
						Pour "Font Symbols", le nom de symbole est aussi 'mapinfo-sym-##' où
  						'##' est le numéro de symbole dans la police de caractères.  Dans ce cas, le nom de la police
  						elle-même est ignoré par MapServer.
					</para>
				</listitem>
			</itemizedlist>
			<itemizedlist>
				<listitem>
					<para>
						MapInfo supporte aussi "custom symbols" (symboles bitmap)... Je ne suis pas certain
  						que vous obtiendrez quelque chose d'OGR pour çà, mais je suis presque sûr que
  						MapServer n'en fera rien de vraiment utile.
					</para>
				</listitem>
			</itemizedlist>
			<para>
				L'utilitaire <link linkend="ogrinfo">OGRINFO</link> peut être utilisé pour chercher quels noms de symbole
				OGR retournera à MapServer.  Cherchez "Style"
				dans la sortie produite par ogrinfo pour chaque forme lue.
			</para>
		</sect2>
		<sect2>
			<title>Traitement de l'information style d'OGR avec les membres CLASS de Mapserver</title>
			<para>
		  Voici la liste des paramètres de style qui sont actuellement supportés depuis les sources de données OGR 
		  et comment ils sont traités dans MapServer:
		</para>
			<variablelist>
				<varlistentry>
					<term>Line color</term>
					<listitem>
						<para>
			La couleur de ligne est mise en correspondance par CLASS.COLOR
			</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Ligne fine</term>
					<listitem>
						<para>
			Par défaut la ligne sera 1 pixel (comme c'est toujours le cas avec MapServer).
  			Dans MapServer, pour obtenir des lignes plus épaisses qu'1 pixel, une des méthodes est d'avoir
  			défini un symbole circulaire qui sera utilisé pour restituer la ligne (en appliquant
  			une taille a ce symbole circulaire).
			</para>
						<para>
			Donc si votre source de données contient des lignes plus épaisses qu'1 pixel vous avez
  			besoin de fournir un symbole circulaire dans votre ensemble de symboles et vous devez le nommer
  			"default-circle".  Si ce symbole est présent alors les lignes seront
  			dessinées en utilisant leur épaisseur réelle, sinon toutes les lignes n'auront qu'1 pixel.
			</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Couleur de remplissage de polygone</term>
					<listitem>
						<para>
							<literallayout>La couleur de remplissage de polygone est directement mise en correspondance par CLASS.COLOR
			</literallayout>
  			Notez que pour l'instant, la transparence des polygones n'est pas utilisable (ils seront toujours opaques).
          	</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Contour de polygone</term>
					<listitem>
						<para>
			Si un polygone a une couleur de contour et une épaisseur de ligne dans la source de données
  			la même règle que celle de la couleur de ligne et l'épaisseur décrite ci-dessus, sera appliquée,
 			sauf que la couleur de contour sera mise en correspondance par CLASS.OUTLINECOLOR
			</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Symboles point</term>
					<listitem>
						<para>
							<literallayout>La couleur de symbole poit est directement mise en correspondance par CLASS.COLOR.
			La taille de symbole point est mise en correspondance par CLASS.SIZE
               </literallayout>
  			Si votre ensemble de symboles contient un symbole appelé "default-marker" alors ce
  			symbole sera utilisé, sinon par défaut CLASS.SYMBOL=0 sera utilisé 
  			(tel qu'un point de 1 pixel)
			</para>
						<para>
			Il est aussi possible (avec un peu de travail) de contrôler quel symbole
  			est employé pour la restitution des symboles point.  OGR fournit à MapServer les noms
  			de symbole, et si le nom de symbole retourné par OGR à MapServer correspond au nom
  			de l'un des symboles de votre ensemble de symboles alors ce symbole sera utilisé.
			</para>
						<para>
			Pour les symboles point de MapInfo (numéroté de 32 à 67 dans le MapInfo MIF), 
  			le nom retourné par OGR est "mapinfo-sym-X" où X devrait être remplacé
  			par le numéro de symbole MapInfo (par exemple "mapinfo-sym-35" est le symbole étoile).
			</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Etiquettes de texte</term>
					<listitem>
						<para>
							<literallayout>Le texte est mis en correspondance par CLASS.TEXT
			La couleur de texte est mise en correspondance par CLASS.LABEL.COLOR
			La couleur d'arrière-plan du texte est mise en correspondance par CLASS.LABEL.BACKGROUNDCOLOR
			La hauteur du texte est mise en correspondance par CLASS.LABEL.SIZE
			L'angle du texte est mis en correspondance par CLASS.LABEL.ANGLE
			</literallayout>
						</para>
						<para>
			La police de caractères du texte est mise en correspondance selon les règles suivantes:
			</para>
						<orderedlist numeration="arabic">
							<listitem>
								<para>
			   Si les polices TTF sont supportées:
			   </para>
								<orderedlist numeration="loweralpha" inheritnum="inherit">
									<listitem>
										<para>
				  Si le nom natif de police (par exemple "Arial") est trouvé dans votre ensemble de polices
         			  alors cette police sera utilisée.
				</para>
									</listitem>
									<listitem>
										<para>
				Si 1a. échoue et qu'une police nommée "default" est présente dans votre ensemble de polices
         		     alors cette police "default" sera utilisée.
				</para>
									</listitem>
								</orderedlist>
							</listitem>
							<listitem>
								<para>
			   Si les polices TTF ne sont pas supportées ou si tous les cas précédents ont échoué, alors la police BITMAP MEDIUM
     	        sera utilisée.
			  </para>
							</listitem>
						</orderedlist>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
	</sect1>
	<!-- Section1: Live Demos -->
	<sect1 id="Sample_sites">
		<title>Exemples de sites utilisant OGR/Mapserver</title>
		<para>
		    Les sites suivants utilisent la fonction OGR STYLEITEM "AUTO":
		</para>
		<itemizedlist>
			<listitem>
				<para>
					<ulink url="http://www2.dmsolutions.ca/msapps/yk_demo/demo_init.html"> 				                http://www2.dmsolutions.ca/msapps/yk_demo/demo_init.html</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://www2.dmsolutions.ca/msapps/nfld_demo/demo_init.html"> 				                http://www2.dmsolutions.ca/msapps/nfld_demo/demo_init.html</ulink>
				</para>
			</listitem>
		</itemizedlist>
		<para>
	         Les sites suivants utilisent OGR, ainsi que la fonction MapInfo 'Seamless Map Layers':
	    </para>
		<itemizedlist>
			<listitem>
				<para>
					<ulink url="http://www2.dmsolutions.ca/msapps/ro_demo/demo_init.html"> 				                http://www2.dmsolutions.ca/msapps/ro_demo/demo_init.html</ulink>
				</para>
			</listitem>
		</itemizedlist>
		<para>
			Les sites suivants utilisent OGR pour afficher des fichiers TIGER 2000:
		</para>
		<itemizedlist>
			<listitem>
				<para>
					<ulink url="http://www2.dmsolutions.on.ca/msapps/tig_demo/demo_init.html">
					http://www2.dmsolutions.on.ca/msapps/tig_demo/demo_init.html</ulink>
				</para>
			</listitem>
		</itemizedlist>
	</sect1>
	<!-- Section1: FAQ -->
	<sect1 id="FAQ">
		<title>FAQ / Problèmes habituels</title>
		<sect2>
			<title/>
			<qandaset defaultlabel="qanda">
				<qandaentry>
					<question>
						<para>
				Que veut dire "OGR"?
				</para>
					</question>
					<answer>
						<para>
                       Basiquement, OGR ne veut rien dire de particulier.  Pour une explication détaillée sur la manière dont OGR a été nommé, voyez le site OGR de Frank
                       Warmerdam sur <ulink url="http://gdal.velocet.ca/projects/opengis">http://gdal.velocet.ca/projects/opengis</ulink> dans la partie 'OGR and OpenGIS'.
                    </para>
					</answer>
				</qandaentry>
				<qandaentry>
					<question>
						<para>
							Quand on utilise STYLEITEM AUTO, que devrais-je avoir dans mon fichier de symboles <filename>.sym</filename>?
						</para>
					</question>
					<answer>
						<para>
				Quand vous utilisez STYLEITEM AUTO, MapServer tente de faire correspondre les noms de symbole
				retournés par OGR pour nommer votre fichier symbole.  Pour une solution rapide, essayez en
				utilisant le fichier symbole suivant:
			</para>
						<para>
							<ulink url="http://www2.dmsolutions.ca/msapps/yk_demo/etc/symbols_mapinfo.sym">
				http://www2.dmsolutions.ca/msapps/yk_demo/etc/symbols_mapinfo.sym</ulink>
						</para>
						<para>
				Le nom des symboles retourné par OGR à MapServer depend du format du fichier.
				Dans le cas des fichiers MapInfo, il sera:
			</para>
						<itemizedlist>
							<listitem>
								<para>
						Pour les symboles "old-style" (par défaut les symboels MapInfo 3.0 sont numérotés de 32 à
  						67) le nom de symbole sera 'mapinfo-sym-##' où '##' est le numéro de symbole,
  						comme 'mapinfo-sym-32'.
					</para>
							</listitem>
						</itemizedlist>
						<itemizedlist>
							<listitem>
								<para>
						Pour "Font Symbols", le nom de symbole est aussi 'mapinfo-sym-##' où
  						'##' est le numéro de symbole dans la police.  Dans ce cas, le nom de la 
  						police elle-même est ignoré par MapServer.
					</para>
							</listitem>
						</itemizedlist>
						<itemizedlist>
							<listitem>
								<para>
						MapInfo supporte aussi les "custom symbols" (symboles image bitmap)... Je ne suis pas certain
  						que vous obtiendrez quelque chose d'OGR avec çà, mais je suis presque sûr que 
  						MapServer n'en fera pas grand chose.
					</para>
							</listitem>
						</itemizedlist>
						<para>
				L'utilitaire <link linkend="ogrinfo">OGRINFO</link> peut être utilisé pour chercher quel nom exact de symbole
				OGR retournera à MapServer.  Cherchez "Style"
				dans la sortie de ogrinfo pour chaque forme lue.
			</para>
					</answer>
				</qandaentry>
			</qandaset>
		</sect2>
	</sect1>
	<!-- Section1: Document Info -->
	<sect1 id="docinfo">
		<title>A propos de ce document</title>
		<sect2 id="copyright">
			<title>Information de Copyright</title>
			<para>
                Copyright (c) 2002, Jeff McKenna, DM Solutions Group Inc.
            </para>
			<para>
                Cette documentation est protégée par la même licence Open Source que celle du logiciel
                MapServer lui-même.  Voyez la page MapServer
                <ulink url="http://mapserver.gis.umn.edu/license.html">License and 
                Credits</ulink> pour le texte complet.
            </para>
		</sect2>
		<sect2 id="disclaimer">
			<title>Avertissement</title>
			<para>Aucune responsabilité pour le contenu de ce document ne peut être acceptée. Utilisez les concepts, exemples et autres éléments à vos risques et périls. Comme il s'agit d'une nouvelle version  de ce document, il peut y persister des erreurs et omissions qui pourraient endommager votre système. Aussi il est expressément conseillé, l'auteur et le traducteur n'assurant aucune responsabilité, de procéder avec précaution.
                 	</para>
		</sect2>
		<!-- Section2: feedback -->
		<sect2 id="feedback">
			<title>Feedback</title>
			<para>Envoyez toutes vos suggestions et commentaires à l'auteur, ou au traducteur.
   			</para>
		</sect2>
	</sect1>
</article>
