<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://mapserver.gis.umn.edu/mdp/docbkx412/docbookx.dtd">
<article>
  <articleinfo>
    <title>MapServer CGI Reference</title>
    <author>
      <firstname>Stephen </firstname>
      <surname>Lime</surname>
      <affiliation>
        <orgname>Minnesota Department of Natural Resources</orgname>
        <address>
			<email>steve.lime@dnr.state.mn.us</email>
        </address>
      </affiliation>
    </author>
	<author>
		<firstname>Frank</firstname>
		<surname>Koormann</surname>
		<affiliation>
			<orgname>Intevation GmbH</orgname>
			<address>
				<email>frank.koormann@intevation.de</email>
			</address>
		</affiliation>
	</author>
    <abstract>
      <para>        This document is a reference for the mapserv CGI
        version 3.5.        </para>
      <para>Last Updated:  01-31-2002</para>
    </abstract>
  </articleinfo>
  <sect1 id="intro">
    <title>MapServer - Documentation: CGI Reference</title>
    <para> Mapserv is the CGI portion for the MapServer package. It
      handles user input and directs image creation or query requests.
      The program accepts input via either &quot;GET&quot; or
      &quot;POST&quot; methods and can be used in an interactive manner
      or as an image engine.   </para>
	</sect1>
    <!-- NOTES on syntax -->
    <sect1 id="notes">
      <title>Notes</title>
      <itemizedlist>
        <listitem>
          <para>Variable names are not case sensitive.</para>
        </listitem>
        <listitem>
          <para>In cases where multiple values are associated with a
            variable (eg. mapext), the values must be seperated by
            spaces (or their escaped  equivalents for GET requests).</para>
        </listitem>
        <listitem>
          <para>Variable contents are checked for appropriate data types
            and  magnitude as they are loaded.</para>
        </listitem>
        <listitem>
            <para>
                Any CGI Variable not listed below is simply stored and 
                can be referenced within a 
	            <ulink url="template-reference.html">template file</ulink>. 
            </para>
        </listitem>
      </itemizedlist>
    </sect1>
	
    <!-- Format -->
    <sect1 id="format">
      <title>Format</title>
      <para>Mapserv accepts input in the form of CGI variables as
        described below.</para>
		<sect2 id="cgi-variables">
        <title>CGI Variables</title>
      	<variablelist>
        	<varlistentry>
          	<term>BUFFER [distance]</term>
          	<listitem>
            <para>A distance, in the same coordinate system as the map
              file, used in conjunction with MAPXY to create an new map
              extent. </para>
          </listitem>
        </varlistentry>
            
        <varlistentry>
            <term>ID</term>
	           <listitem>
                    <para> 
						By default MapServer generates a uniq session
						id based on system time and process id.
						This parameter overwrites the default.
	                </para>
					<para>
						As an example this parameter can be used to 
						handle personalized map files in conjunction 
						with the SAVEMAP feature.
					</para>
                </listitem>
            </varlistentry>
	        
        <varlistentry>
          <term>IMG</term>
          <listitem>
            <para> The name associated with the inline map image used to
              record user clicks. What actually is passed are two
              variables, img.x and img.y.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>IMGBOX [x1] [y1] [x2] [y2]</term>
          <listitem>
            <para> Coordinates (in pixels) of a box drag in the image.
              Most often used in conjunction with Java based front ends
              to the MapServer.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>IMGEXT [minx] [miny] [maxx] [maxy]</term>
          <listitem>
            <para> The spatial extent of the existing inline image, that
              is, the image the user can see in their browser.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
            <term>IMGSHAPE [x1 y1 x2 y2 x3 y3 ...]</term>
	        <listitem>
                <para> 
                    Shape given in image coordinates.
                </para>
                <para>
                    An arbitrary polygon shape to be used for query 
                    purposes. Multiple instances simply add parts to 
                    the shape so it is possible to construct a shape 
                    with holes. Used with modes NQUERY and NQUERYMAP. 
	            </para>
            </listitem>
        </varlistentry>
        <varlistentry>
          <term>IMGSIZE [cols] [rows]</term>
          <listitem>
            <para> The size (in pixels) of the exiting inline image.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>IMGXY [x] [y]</term>
          <listitem>
            <para> Coordinates (in pixels) of a single mouse click. Used
              most often in conjunction with Java based front ends to
              the MapServer.</para>
          </listitem>
        </varlistentry>
<!-- Comment by Steve Lime: Not used in version 3.5
        <varlistentry>
            <term>ITEM [name]</term>
	        <listitem>
                <para>
                    The name of an attribute in a layer attribute table. 
                    Used for item/value lookups.
	            </para>
            </listitem>
        </varlistentry>
-->
        <varlistentry>
          <term>LAYER [name]</term>
          <listitem>
            <para> The name of a layer as it appears in the <ulink
                url="mapfile-reference.html">map file</ulink>. Sending
              mapserv a layer name sets that layer&apos;s STATUS to ON.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>LAYERS [name name ...]</term>
          <listitem>
            <para> The names of the layers to be turned on. Layer names
              must be seperated by spaces.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MAP [filename]</term>
          <listitem>
            <para> Path, relative to the CGI directory, of the <ulink
                url="mapfile-reference.html">map file</ulink> to be used.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MAPEXT [minx] [miny] [maxx] [maxy]</term>
          <listitem>
            <para> The spatial extent of the map to be created.    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MAPSIZE [cols] [rows]</term>
          <listitem>
            <para> The size (in pixels) of the image to be created.
              Useful for allowing users to change the resolution of the
              output map dynamically.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MAPSHAPE [x1 y1 x2 y2 x3 y3 ...]</term>
          <listitem>
            <para> 
                Shape in map coordinates.
            </para>
            <para> An arbitrary polygon shape to be used for query
              purposes. Multiple  instances simply add parts to the
              shape so it is possible to construct a shape with holes.
              Used with modes NQUERY and NQUERYMAP.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MAPXY [x] [y]</term>
          <listitem>
            <para> 
				A point, in the same coordinate system as the
              	shapefiles, to be used in conjuction with a buffer or a
              	scale to construct a map extent. 
			</para>
            <para>
                Can be set to <emphasis>shape</emphasis> as an
				alternative option. In this case mapextent is set 
				to the extent of a selected shape. Used with queries.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MINX|MINY|MAXX|MAXY [number]</term>
          <listitem>
            <para> Minimum x coordinate of the spatial extent for a new
              map/query.     </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MODE [value]</term>
          <listitem>
            <para> Mode of operation. The following options are
              supported: (note that all of the query modes also support
              map-only modes, e.g. ITEMQUERYMAP, which for brevity are
              not all listed):</para>
            <variablelist>
              <varlistentry>
                <term>BROWSE</term>
                <listitem>
                  <para> 
				  	Fully interactive interface where maps (and
                    interactive pages) are created. 
					This is the default mode.
				  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>QUERY</term>
                <listitem>
                  <para> A spatial search (finds closest) is triggered
                    by a click in a map.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>NQUERY</term>
                <listitem>
                  <para> A spatial search (finds all) is triggered by a
                    click in a map or by user-define selection box.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ITEMQUERY</term>
                <listitem>
                  <para> A text search of attribute data is triggered
                    using a layer FILTER.  Returns 1st match.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ITEMNQUERY</term>
                <listitem>
                  <para> A text search of attribute data is triggered
                    using a layer FILTER. Returns all matches.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>INDEXQUERY</term>
                <listitem>
                  <para> Looks up a feature based on the values of
                    SHAPEINDEX and TILEINDEX parameters. SHAPEINDEX is
                    required, TILEINDEX is optional and is only used
                    with tiled shapefile layers. </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>FEATUREQUERY</term>
                <listitem>
                  <para> A spatial search that uses one feature from
                    SLAYER to query  other layers.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>FEATURENQUERY</term>
                <listitem>
                  <para> A spatial search that uses multiple features
                    from SLAYER to query other layers.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>FEATUREITEMQUERY</term>
                <listitem>
                  <para> A text search of attribute data is triggered
                    using a layer FILTER.  Returns first match. Layer to
                    be searched is defined using slayer parameter. The
                    results of this search are applied to other
                    searchable layers (which can be limited using the
                    QLAYER parameter).</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>FEATUREITEMNQUERY</term>
                <listitem>
                  <para> A text search of attribute data is triggered
                    using a layer FILTER. Returns all matches. Layer to
                    be searched is defined using slayer parameter. The
                    results of this search are applied to other
                    searchable layers (which can belimited using the
                    QLAYER parameter).</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>MAP</term>
                <listitem>
                  <para> The created map is returned. Used within an
                    &lt;img ... &gt; tag.     </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>REFERENCE</term>
                <listitem>
                  <para> The created reference map is returned. Used
                    within an &lt;img ... &gt; tag.    </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>SCALEBAR</term>
                <listitem>
                  <para> The created scalebar is returned. Used within
                    an &lt;img ... &gt; tag.     </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LEGEND</term>
                <listitem>
                  <para> The created legend is returned. Used within an
                    &lt;img ... &gt; tag.    </para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>QLAYER [name]</term>
          <listitem>
            <para> Query layer. The name of the layer to be queried as
              it appears in  the <ulink url="mapfile-reference.html">map
              file</ulink>. If not specified then all layers are
              searched in turn.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>QUERYFILE [filename]</term>
          <listitem>
            <para> Used with BROWSE or NQUERY mode. This option
              identifies a query file to load before any regular
              processing. In BROWSE mode this result in a query map
              being produced instead of a regular map. This is useful
              when you want to hilite a feature while still in a
              pan/zoom mode. In NQUERY mode you&apos;d gain access to
              any of the templates used in normally presenting the
              query, so you have access to query maps AND attribute
              information. See the SAVEQUERY option.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>REF</term>
          <listitem>
            <para> The name associated with the inline reference map
              image used to  record user clicks. What actually is passed
              are two variables, ref.x and ref.y.</para>
          </listitem>
        </varlistentry>
	    <varlistentry>
            <term>REFXY [x] [y]</term>
            <listitem>
                <para> 
                    Coordinates (in pixels) of a single mouse click
                    in the reference image. 
                    Used in conjunction with Java based 
                    front ends to the MapServer.
	            </para>
            </listitem>
        </varlistentry>
	    <varlistentry>
            <term>SAVEMAP</term>
            <listitem>
               <para> 
				Save the map settings to a new map file into 
				the specified temp directory (
	            <ulink url="mapfile-reference.html#web"
				>imagepath</ulink>). The file can be referenced using
						the [map] tag in 
						<ulink url="template-reference.html">templates</ulink>.
						Note that the relative paths in the map file are
						relative to the location of the map file.
	                </para>
                </listitem>
            </varlistentry>
        <varlistentry>
          <term>SAVEQUERY</term>
          <listitem>
            <para> When used with any of the query modes this tells the
              MapServer to save the query results to a temporary file
              for use in subsequent operations (see QUERYFILE). Useful
              for making queries persistent.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SCALE [number]</term>
          <listitem>
            <para> Scale to create a new map at. Used with mapxy. Scale
              is given as the denominator of the actual scale fraction,
              for example for a map at a scale of 1:24,000 use 24000.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SEARCHMAP</term>
          <listitem>
            <para> It is possible to do pan/zoom interfaces using
              querymaps. In these cases you will likey want information
              about the contents of the new map rather than the previous
              map which is the normal way queries work. When searchmap
              is specified the new map is created an it&apos;s extent is
              used to query layers. Useful with NQUERY, mode only.</para>
          </listitem>
        </varlistentry>
	    <varlistentry>
            <term>SHAPEINDEX [index]</term>
	        <listitem>
                <para> 
                    Used for index queries 
					(in conjunction with INDEXQUERY).
	            </para>
            </listitem>
        </varlistentry>
	
        <varlistentry>
          <term>SLAYER [name]</term>
          <listitem>
            <para> Select layer. The name of the layer to be used for
              any of the feature (i.e. staged) query modes. The select
              layer <emphasis>must</emphasis> be a polygon layer. The
              selection feature(s) are available for presentation to the user.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TEMPLATE [filename]</term>
          <listitem>
            <para> Name of the main template file to use for formatting
              the results. Overrides anything set (in the WEB section)
              in the map file.</para>
          </listitem>
        </varlistentry>
	        <varlistentry>
                <term>TILEINDEX [index]</term>
	            <listitem>
                    <para> 
						Used for index queries (in conjunction with INDEXQUERY),
						used with tiled shapefile layers.
	                </para>
                </listitem>
            </varlistentry>
	
<!-- Comment by Steve Lime: Not used in version 3.5
	        <varlistentry>
                <term>VALUE [expression]</term>
                <listitem>
                    <para> 
                        Value (regular expression) to match 
	                    against in item/value lookups.
	                </para>
                </listitem>
            </varlistentry>
-->	
        <varlistentry>
          <term>ZOOM [number]</term>
          <listitem>
            <para> Zoom scaling to apply to the creation of the new map.
              Values greater than 0 resulting in zooming in, 0 is a pan,
              and values less than zero are for zooming out. A value of
              2 means &quot;zoom in twice&quot;.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>ZOOMDIR [1|0|-1]</term>
          <listitem>
            <para> Direction to zoom. See above.    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ZOOMSIZE [number]</term>
          <listitem>
            <para> Absolute magnitude of a zoom. Used with ZOOMDIR.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

	<!-- mapfile changes -->
    <sect2 id="mapfile">
      <title>Changing <ulink url="mapfile-reference.html">map
        file</ulink> parameters via a form or a URL</title>
      <para>Begining with version 3.3 it is now possible to change
        virtually any map file value from a form or a URL. The syntax
        for this is fairly straight forward. Any value can be expressed
        using the hierarchy used in a map file. A map contains a layer,
        which contains  a class, which contains a label, which has a
        color. This hierarchy is expressed as a  sequence of MapServer
        keywords seperated by underscores. For example to change the
        color of a layer called &quot;lakes&quot; with only one class
        defined you would use a form variable named
        &quot;map_lakes_class_color&quot; and could assign it a color
        like &quot;0 0 255&quot;. Layers can be referenced by index
        (i.e. map_layer_0...) or by name as shown above. Layer classes
        are referenced by index value (i.e.  map_layer_0_class_2). If
        there is only 1 class for a layer then the index should be
        ommited. These variables must always begin with the sequence
        &quot;map_&quot;. Values assigned must conform to the syntax of
        a map file.</para>
      <para>It is also possible to define inline features using this
        mechanism. This is the only case where you can add on to the map
        file.  You can edit/change layer parameters but you cannot
        create a new layer. With inline features you have to first
        create a feature and then build upon it, however, the layer the
        feature belongs to must exist. Here&apos;s a snippet from a GET
        request that adds a feature to a webuser layer:
        <programlisting><![CDATA[
      ...&map_webuser_feature=new&map_webuser_feature_points=12345.6789+12345.6789+map_webuser_feature_text=My+House!&...
      ]]></programlisting>
        The &quot;map_webuser_feature=new&quot; creates a new feature
        for the webuser layer. All subsequent calls to the feature
        object for that layer will modify the new feature. You can
        repeat the process to create additional features. This is really
        intended for very small (point, rectangle) amounts of data.</para>
      <para>It&apos;s quite possible that we&apos;ll come up with some
        shortcuts for this processing, but until we know how useful this
        is to users this is it. One potentially very powerful use
        involves changing class expressions on-the-fly. Anyway, try it out.</para>
    </sect2>

<!--
	<sect2 id="experimental">
		<title>Experimental</title>
		<variablelist>
        	<varlistentry>
            	<term>EGIS {none}</term>
            	<listitem>
                	<para>
                    	OV - eGIS - additional token "none" is defined to 
                    	create somewhat mutual exculsiveness between 
                    	mapserver and eGIS.
     	           </para>
        	        <para>
            	        This parameter is only available if Mapserv was 
                	    built with the <emphasis>USE_EGIS</emphasis> flag.
             	   </para>
           	 	</listitem>
        	</varlistentry>
		</variablelist>
	</sect2>
-->
  </sect1>
</article>
