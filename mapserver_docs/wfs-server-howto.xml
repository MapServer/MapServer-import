<?xml version="1.0" standalone="no"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://mapserver.gis.umn.edu/mdp/docbkx412/docbookx.dtd">
<article>
  <articleinfo>
    <title>MapServer WFS Server HOWTO - Version 4.4</title>
    <author>
      <firstname>Jean-Fran&ccedil;ois</firstname>
      <surname>Doyon</surname>
      <affiliation>
        <orgname>Natural Resources Canada</orgname>
        <orgdiv>Earth Sciences Sector</orgdiv>
        <orgdiv>Canada Center for Remote Sensing</orgdiv>
        <orgdiv>GeoAccess Division</orgdiv>
        <address>
          <email>jdoyon@nrcan.gc.ca</email>
        </address>
      </affiliation>
    </author>
    <author>
      <firstname>Jeff</firstname>
      <surname>McKenna</surname>
      <affiliation>
        <orgname>DM Solutions Group Inc.</orgname>
        <address>
          <email>jmckenna@dmsolutions.ca</email>
        </address>        
      </affiliation>
    </author>
    <abstract>
      <para>This document explains how to configure MapServer to serve data through the OGC WFS interface.</para>
      <para>Last Updated:  2005-01-10</para>
      <para>
          <link linkend="rhistory">Revision History</link>
      </para>       
    </abstract>
  </articleinfo>
  <sect1 id="intro">
    <title>Introduction</title>
    <para>A WFS ( Web Feature Service ) publishes feature-level geospatial data to the web.  This means that instead of returning an image, as MapServer has traditionally done, the client now obtains fine-grained information about specific geospatial features of the underlying data, at both the geometry AND attribute levels.  As with other OGC specifications, this interface uses XML over HTTP as it's delivery mechanism, and, more precisely, GML (Geography Markup Language), which is a subset of XML.</para>
    <sect2 id="related">
      <title>WFS-Related Information</title>
      <para>Here are some WFS related links (including a newly added OGC services workshop with MapServer). Since these are highly detailed technical specifications, there is no need to read through them in their entirety to get a MapServer WFS up and running.  It is still recommended however to read them over and get familiar with the basics of each of them, in order to understand how it all works:</para>
      <itemizedlist>
        <listitem>
          <para>The <ulink url="https://portal.opengeospatial.org/files/?artifact_id=7176">OGC Web Feature Service Implementation Specification</ulink>.</para>
        </listitem>
        <listitem>
          <para>The <ulink url="https://portal.opengeospatial.org/files/?artifact_id=7174">Geography Markup Language Implementation Specification</ulink>.</para>
        </listitem>
        <listitem>
          <para>
            MapServer OGC Web Services Workshop package at <ulink url="http://devgeo.cciw.ca/ms_ogc_workshop/index.html">
           http://devgeo.cciw.ca/ms_ogc_workshop/index.html</ulink>.
          </para>
        </listitem>          
      </itemizedlist>
      <para>Working knowledge of MapServer is of course also required.</para>
    </sect2>
    <sect2 id="software">
      <title>Software Requirements</title>
      <para>In order to enable MapServer to serve WFS, it MUST be compiled against certain librairies:</para>
      <itemizedlist>
        <listitem>
          <para>PROJ.4: The reprojection library. Version 4.4.3 or greater is required.</para>
        </listitem>
        <listitem>
          <para>GDAL/OGR: I/O support librairies. Version 1.1.8 or greater is required.</para>
        </listitem>
      </itemizedlist>
      <para>Please see the MapServer UNIX Compilation and Installation HOWTO for detailed instructions on compiling mapserver with support for these librairies and features.  For Windows users, look on the MapServer website to see if there are any binaries available that meet these requirements.</para>
    </sect2>
  </sect1>
  <sect1>
    <title>Configuring your MapFile to Serve WFS layers</title>
    <para>Much as in the WMS support, WFS publishing is enabled by adding certain magic METADATA keyword/value pairs to a MapFile.</para>
    <para>MapServer will serve and include in its WFS capabilities only the layers that meet the following conditions:</para>
    <itemizedlist>
      <listitem>
        <para>Data source is of vector type (Shapefile, OGR, PostGIS, SDE, SDO, ...)</para>
      </listitem>
      <listitem>
        <para>LAYER NAME must be set. <emphasis>
              Layer names must start with a letter when setting up a WFS server (layer names should 
              not start with a digit or have spaces in them).</emphasis></para>
      </listitem>
      <listitem>
        <para>LAYER TYPE is one of: LINE, POINT, POLYGON</para>
      </listitem>
      <listitem>
        <para>LAYER DUMP parameter set to TRUE</para>
      </listitem>
        <listitem id="wfs_onlineresource">
          <para>
            The "wfs_onlineresource" metadata:
          </para>
          <para>
            The wfs_onlineresource metadata is set in the map's web object metadata and
              specifies the URL that should be used to access your server.  This is
              required for the GetCapabilities output. If wfs_onlineresource is not 
              provided then MapServer will try to provide a default one using the script
              name and hostname, but you shouldn't count on that too much.  It is strongly
              recommended that you provide the wfs_onlineresource metadata.
          </para>
          <para>
            See section 12.3.3 of the <ulink url="https://portal.opengeospatial.org/files/?artifact_id=7176">
            WFS 1.0.0 specification</ulink> for the whole story about
              the online resource URL.  Basically, what you need is a complete HTTP URL
              including the <filename>http://</filename> prefix, hostname, script name, potentially a "map="
              parameter, and and terminated by "?" or "&amp;".
          </para>
          <para>
            Here is a valid online resource URL:
          </para>
          <programlisting>
   http://my.host.com/cgi-bin/mapserv?map=mywfs.map&amp;
          </programlisting>
          <para>
            By creating a wrapper script on the server it is possible to hide the 
              "map=" parameter from the URL and then your server's online resource 
              URL could be something like:
          </para>
          <programlisting>
   http://my.host.com/cgi-bin/mywfs?
          </programlisting>
          <para>
            This is covered in more detail in the section <ulink url="http://mapserver.gis.umn.edu/doc/wms-server-howto.html#onlineresourceurl">
            "More About the Online Resource URL"</ulink> of the WMS Server document.
          </para>
        </listitem>      
    </itemizedlist>
    <sect2>
      <title>Example WFS Server Mapfile</title>
        <para>The following is an example of a bare minimum WFS Server mapfile.  Note the comments for
        the required parameters.</para>
        <programlisting>
        NAME DEMO
        STATUS ON
        SIZE 400 300
        SYMBOLSET ../etc/symbols.sym
        EXTENT -2200000 -712631 3072800 3840000
        UNITS METERS
        SHAPEPATH "../data"
        IMAGECOLOR 255 255 255
        FONTSET ../etc/fonts.txt

        WEB
          IMAGEPATH "/ms4w/tmp/ms_tmp/" 
          IMAGEURL "/ms_tmp/"
          METADATA
            "wfs_title"            "GMap WFS Demo Server"  ## REQUIRED
            "wfs_onlineresource"   "http://127.0.0.1/cgi-bin/mapserv.exe?"  ## Recommended
            "wfs_srs"               "EPSG:42304 EPSG:42101 EPSG:4269 EPSG:4326"  ## Recommended
            "ows_schemas_location" "http://ogc.dmsolutions.ca"  ## Optional
          END
        END

        PROJECTION
          "init=epsg:42304"
        END

        LAYER
          NAME province
          METADATA
            "wfs_title"    "Provinces" ## REQUIRED
          END
          TYPE POLYGON
          STATUS ON
          DATA province
          PROJECTION
            "init=epsg:42304"
          END
          DUMP TRUE           ## REQUIRED
          CLASS
            NAME "Canada"
            COLOR 200 255 0
            OUTLINECOLOR 120 120 120
            TEMPLATE "ttt_query.html"
          END
        END # Layer

        END # Map File
        </programlisting>
    </sect2>
  <sect2>
    <title>Rules for Handling SRS in MapServer WFS</title>
    <para>Contrary to WMS, the OGC WFS specification doesn't allow a layer (feature type) to be advertized in more than one SRS.  Also, there is no default SRS that applies to all layers by default in the OGC WFS spec.  However, it is possible to have every layer in a WFS server advertized in a different SRS.</para>
    <para>Here is how MapServer decides the SRS to advertize and use for each layer in your WFS:</para>
    <itemizedlist>
      <listitem>
        <para>If a top-level map SRS is defined* then this SRS is used and applies to all layers (feature types) in this WFS.  In this case the SRS of individual layers is simply ignored even if it's set.</para>
      </listitem>
      <listitem>
        <para>If there is no top-level map SRS defined* then each layer is advertized in its own SRS in the capabilities.</para>
      </listitem>
    </itemizedlist>
    <para>* By "SRS is defined", we mean either the presence of a PROJECTION object defined using an EPSG code, or of a "wfs_srs" metadata at this level.</para>
    <para>Note that at the map top-level the "wfs_srs" metadata value takes precedence over the contents of the PROJECTION block.</para>
    <para>At the layer level, if both the wfs_srs metadata and the PROJECTION object are set to different values, then the wfs_srs metadata defines the projection to use in advertizing this layer (assuming there is no top-level map SRS), and the PROJECTION value is assumed to be the projection of the data.  So this means that the data would be reprojected from the PROJECTION SRS to the one defined in the wfs_srs metadata before being served to WFS clients.</para>
    <para>Confusing?  As a rule of thumb, simply set the wfs_srs at the map level (in web metadata) and never set the wfs_srs metadata at the layer level and things will work fine for most cases.</para>
  </sect2> 
    <sect2 id="test">
      <title>Test Your WFS Server</title>
      <sect3 id="val_capabilities">
        <title>Validate the Capabilities Metadata</title>
        <para>
          OK, now that we've got a mapfile, we have to check the XML capabilities 
          returned by our server to make sure nothing is missing.
        </para>
        <para>
          Using a web browser, access your server's online resource URL to which you
          add the parameter "REQUEST=GetCapabilities" to the end, e.g.
        </para>
        <para>
        <ulink url="http://www2.dmsolutions.ca/cgi-bin/mswfs_gmap?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=getcapabilities">
        http://www2.dmsolutions.ca/cgi-bin/mswfs_gmap?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=getcapabilities</ulink>
        </para>
        <para>
          This should return a document of MIME type application/vnd.ogc.wfs_xml, so 
          your browser is likely going to prompt you to save the file.  Save it and 
          open it in a text editor (Emacs, Notepad, etc.)
        </para>
        <para>
          If everything went well, you should have a complete XML capabilities document.
          Search it for the word "WARNING"... MapServer inserts XML comments starting
          with "&lt;!--WARNING: " in the XML output if it detects missing mapfile parameters
          or metadata items.  If you notice any warning in your XML output then you have
          to fix all of them before you can register your server with a WFS client, 
          otherwise things are likely not going to work.
        </para>
      </sect3>
      <sect3 id="val_getmap">
        <title>Test With a GetFeature Request</title>
        <para>
          OK, now that we know that our server can produce a valid XML GetCapabilities
          response we should test the GetFeature request.  
          Simply adding <filename>"VERSION=1.0.0&amp;REQUEST=GetFeature&amp;TYPENAME=yourlayername1,yourlayername2"</filename> to your server's URL should 
          return the GML associated with those layers.
        </para>
        <para>
        <ulink url="http://www2.dmsolutions.ca/cgi-bin/mswfs_gmap?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=getfeature&amp;TYPENAME=park">
        http://www2.dmsolutions.ca/cgi-bin/mswfs_gmap?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=getfeature&amp;TYPENAME=park</ulink>
        </para>
      </sect3>
      <sect3 id="val_client">
        <title>Test with a Real Client</title>
        <para>
          If you have access to a WFS client, then register your new server's online
          resource with it and you should be off and running.
        </para>
        <para>
          If you don't have your own WFS client installed already, here are a few pointers: 
        </para>
        <itemizedlist>
          <listitem>
            <para>
             MapServer itself can be used as a WFS client, see the 
             <ulink url="http://mapserver.gis.umn.edu/doc/wfs-client-howto.html">WFS Client HOWTO</ulink>.
            </para>
          </listitem>
          <listitem>
            <para>
              <ulink url="http://deegree.sourceforge.net/">Deegree</ulink> provides a WFS client.
            </para>
          </listitem>
          <listitem>
            <para>
              The <ulink url="http://cgdi-dev.geoconnections.org/prototypes/owsview/index.html">owsview</ulink> Viewer Client Generator is an online              
              application that allows users to add WMS and WFS layers by validating WMS and WFS Capabilities XML.</para>
          </listitem>
        </itemizedlist>
      </sect3>
    </sect2>
    <sect2 id="get-post">
      <title>Support for GET and POST Requests</title>
      <para>
        Starting from version 4.2 MapServer supports XML-encoded POST requests and GET requests. The default in
        MapServer is POST.
      </para>
    </sect2>
    <sect2 id="filter-encoding">
      <title>Support for Filter Encoding</title>
      <para>
        Starting from version 4.2 MapServer supports Filter Encoding (FE) in WFS GetFeature requests.  For more
        information on the server side of Filter Encoding see the <ulink url="http://mapserver.gis.umn.edu/doc/filter-encoding-howto.html#server">Filter Encoding HOWTO</ulink>.
      </para>
    </sect2>
</sect1>
<sect1 id="reference">
  <title>Reference Section</title>    
  <sect2 id="metadata">
    <title>Metadata</title>
    <para>
      The following metadata are available in the setup of the WFS Server mapfile:
    </para>
      <note>
       <para>
          Each of the above metadata can also be referred to as 'ows_*' instead of 'wfs_*'.  MapServer tries the 'wfs_*' metadata first, and if not 
          found it tries the corresponding 'ows_*' name.  Using this reduces
          the amount of duplication in mapfiles that support multiple OGC interfaces since
          "ows_*" metadata can be used almost everywhere for common metadata items shared
          by multiple OGC interfaces.       
       </para>
      </note>    
    <sect3 id="web">
      <title>Web Object</title>
    <sect4 id="ows_schemas_location">
      <title>ows_schemas_location</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) (Note the name ows_schemas_location and not wfs_... this is because all OGC Web Services (OWS) use the same metadata) Root of 
            the web tree where the family of OGC WFS XMLSchema files are located.  This must be a valid URL where the actual .xsd files are located 
            if you want your WFS output to validate in a validating XML parser. The default if this is not set is to use ".." as the schema files location, 
            which should correspond to the root of your web server if you installed mapserv in the cgi-bin directory. See http://ogc.dmsolutions.ca for an 
            example of a valid schema tree.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>
    <sect4 id="abstract">
      <title>wfs_abstract</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>WFS TAG Name:</emphasis> Abstract (WFS 1.0.0, sect. 12.3.3)
            </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) Descriptive narrative for more information about the server.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>
    <sect4 id="accesscontraints">
      <title>wfs_accessconstraints</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>WFS TAG Name:</emphasis> Accessconstraints (WFS 1.0.0, sect. 12.3.3)
            </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) Text describing any access constraints imposed by
            the service provider on the WFS or data retrieved from this service.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>
    <sect4 id="encoding">
      <title>wfs_encoding</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) XML encoding for all XML documents returned by the server. The default is ISO-8859-1.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>        
    <sect4 id="fees">
      <title>wfs_fees</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>WFS TAG Name:</emphasis> Fees (WFS 1.0.0, sect. 12.3.3)
            </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) Any fees imposed by the service provider for usage of
            this service or for data retrieved from the WFS.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>         
    <sect4 id="keywordlist">
      <title>wfs_keywordlist</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>WFS TAG Name:</emphasis> Keyword (WFS 1.0.0, sect. 12.3.3)
            </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) List of words to aid catalog searching.
          </para>
        </listitem>
      </itemizedlist>
    </sect4> 
    <sect4 id="maxfeatures">
      <title>wfs_maxfeatures</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) The number of elements to be returned by the WFS server.
            This has priority over the 'wfs_maxfeatures' parameter passed by the user.  If the not set the current behaviour is not changed.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>     
    <sect4 id="namespace_prefix">
      <title>wfs_namespace_prefix</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) User defined namespace prefix to be used in the response of a WFS GetFeature request. e.g. "wfs_namespace_prefix" "someprefix".
          </para>
        </listitem>
      </itemizedlist>
    </sect4>  
    <sect4 id="namespace_uri">
      <title>wfs_namespace_uri</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) User defined namespace URI to be used in the response of a WFS GetFeature request. e.g. "wfs_namespace_uri" "http://somehost/someurl".
          </para>
        </listitem>
      </itemizedlist>
    </sect4>         
    <sect4 id="onlineresource">
      <title>wfs_onlineresource</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>WFS TAG Name:</emphasis> Onlineresource (WFS 1.0.0, sect. 12.3.3)
            </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Recommended) The URL prefix for HTTP GET requests.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>
    <sect4 id="service_onlineresource">
      <title>wfs_service_onlineresource</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) Top-level onlineresource URL.  MapServer uses the onlineresource
            metadata (if provided) in the following order:
          </para>
          <orderedlist>
            <listitem>
              <para>
                wfs_service_onlineresource
              </para>
            </listitem>
            <listitem>
              <para>
                ows_service_onlineresource
              </para>
            </listitem>  
            <listitem>
              <para>
                wfs_onlineresource (or automatically generated URL, see the <link linkend="wfs_onlineresource">onlineresource section</link>
                of this document)
              </para>
            </listitem>                 
          </orderedlist>
        </listitem>
      </itemizedlist>
    </sect4>    
    <sect4 id="title">
      <title>wfs_title</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>WFS TAG Name:</emphasis> Title (WFS 1.0.0, sect. 12.3.3)
            </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Required) Human readable title to identify server.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>      
    <sect4 id="srs">
      <title>wfs_srs</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Recommended) The SRS to use for all layers in this server.  (e.g. EPSG:4326) See the notes below about the SRS rules in the WFS.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>        
</sect3>
<sect3>
  <title>Layer Object</title>
    <sect4 id="lay_abstract">
      <title>wfs_abstract</title>
      <itemizedlist>
        <listitem>
          <para>
            Same as <link linkend="abstract">wfs_abstract</link> in the Web Object.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>
    <sect4 id="lay_keywordlist">
      <title>wfs_keywordlist</title>
      <itemizedlist>
        <listitem>
          <para>
            Same as <link linkend="keywordlist">wfs_keywordlist</link> in the Web Object.
          </para>
        </listitem>
      </itemizedlist>
    </sect4> 
    <sect4 id="lay_metaformat">
      <title>wfs_metadataurl_format</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) The file format of the metadata record.  Valid
            values are "XML", "SGML", or "HTML".
            The layer metadata <emphasis>wfs_metadataurl_type</emphasis> and
             <emphasis>wfs_metadataurl_href</emphasis> must also be specified.
          </para>
        </listitem>
        <listitem>
          <para>
            refer to section 12.3.5 of the <ulink url="https://portal.opengeospatial.org/files/?artifact_id=7176">
            WFS 1.0.0 spec</ulink>.
          </para>
        </listitem>
      </itemizedlist>
    </sect4> 
    <sect4 id="lay_metahref">
      <title>wfs_metadataurl_href</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> (Optional) The URL to the layer's metadata.
            The layer metadata <emphasis>wfs_metadataurl_type</emphasis> and
             <emphasis>wfs_metadataurl_format</emphasis> must also be specified.
          </para>
        </listitem>
        <listitem>
          <para>
            refer to section 12.3.5 of the <ulink url="https://portal.opengeospatial.org/files/?artifact_id=7176">
            WFS 1.0.0 spec</ulink>.
          </para>
        </listitem>
      </itemizedlist>
    </sect4> 
    <sect4 id="lay_metatype">
      <title>wfs_metadataurl_type</title>
      <itemizedlist>
        <listitem>
          <para>
                <emphasis>Description:</emphasis> (Optional) The standard to which the metadata complies.
                 Currently only two types are valid: "TC211" which refers to [ISO 19115], and "FGDC" which
                 refers to [FGDC CSDGM].
                 The layer metadata <emphasis>wfs_metadataurl_format</emphasis> and
                <emphasis>wfs_metadataurl_href</emphasis> must also be specified.
          </para>
        </listitem>
        <listitem>
          <para>
            refer to section 12.3.5 of the <ulink url="https://portal.opengeospatial.org/files/?artifact_id=7176">
            WFS 1.0.0 spec</ulink>.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>     
    <sect4 id="lay_srs">
      <title>wfs_srs</title>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis>Description:</emphasis> If there is no SRS defined at the top-level in the mapfile then this SRS will be used to advertize this feature type (layer) in the capabilities. See the note below about the SRS rules in the WFS.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>        
    <sect4 id="lay_title">
      <title>wfs_title</title>
      <itemizedlist>
        <listitem>
          <para>
            Same as <link linkend="title">wfs_title</link> in the Web Object.
          </para>
        </listitem>
      </itemizedlist>
    </sect4>          
</sect3>
</sect2>
</sect1>
  <sect1>
    <title>To-do Items and Known Limitations</title>
    <itemizedlist>
      <listitem>
        <para>This is just a basic WFS (read-only): transaction requests are not supported and probably never will given the nature of MapServer.</para>
      </listitem>
      <listitem>
        <para>WFS spec. seems to require that features of a given feature type must all be of the same geometry type (point, line, polygon).  This works fine for shapefiles, but some data source formats supported by MapServer allow mixed geometry types in a single layer and this goes against the WFS spec.  Suggestions on how to handle this are welcome.</para>
      </listitem>
    </itemizedlist>
  </sect1>
    <!-- Section1: Document Info -->
    <sect1 id="docinfo">
        <title>About This Document</title>
        <sect2 id="rhistory">
            <title>Revision History</title>
            <para>  
  The document revision history starts with UMN MapServer 4.3 although the
  document is older. The numbering is in parallel with the revision control
  system. Missing numbers indicate minor maintenance revision updates.
</para>
            <para>
                <revhistory>
                    <revision>
                        <revnumber>Number: 1.10</revnumber>
                        <date>Date: 2005-01-10</date>
                        <authorinitials>Author: Jeff McKenna</authorinitials>
                        <revremark>several updates
                                   </revremark>
                    </revision>                 
                    <revision>
                        <revnumber>Number: 1.9</revnumber>
                        <date>Date: 2004-11-29</date>
                        <authorinitials>Author: Jeff McKenna</authorinitials>
                        <revremark>Added several sections, added wfs_metadataurl* 
                                   </revremark>
                    </revision>                 
                    <revision>
                        <revnumber>Number: 1.7</revnumber>
                        <date>Date: 2004-11-02</date>
                        <authorinitials>Author: Jeff McKenna</authorinitials>
                        <revremark>Added OGC workshop link
                                   </revremark>
                    </revision>                
                    <revision>
                        <revnumber>Number: 1.5</revnumber>
                        <date>Date: 2004-11-01</date>
                        <authorinitials>Author: Jeff McKenna</authorinitials>
                        <revremark>Added uri_namespace metadata
                                   </revremark>
                    </revision>
                    <revision>
                        <revnumber>Number: 1.4</revnumber>
                        <date>Date: 2004-09-08</date>
                        <authorinitials>Author: Daniel Morissette</authorinitials>
                        <revremark>Removed todos and limitations that have been fixed already</revremark>
                    </revision>
                </revhistory>
            </para>
        </sect2>
        <sect2 id="copyright">
            <title>Copyright Information</title>
            <para>
    Copyright (c) 2004, Jean-Fran&ccedil;ois Doyon, Jeff McKenna.
   </para>
            <para>
    This documentation is covered by the same Free Software license as the MapServer software.
    See MapServer's
    <ulink url="http://mapserver.gis.umn.edu/license.html">License and 
    Credits</ulink> page for the complete text.
   </para>
        </sect2>
        <sect2 id="disclaimer">
            <title>Disclaimer</title>
            <para>
    No liability for the contents of this document can be accepted.
    Use the concepts, examples and other content at your own risk.
    As this is a new edition of this document, there may be errors
    and inaccuracies that may be damaging to your system.
    Although this is highly unlikely, the author(s) do not take any 
    responsibility for that:  proceed with caution.
   </para>
        </sect2>
        <!-- Section2: feedback -->
        <sect2 id="feedback">
            <title>Feedback</title>
        <para>
            Input is appreciated.  Send any
            comments or suggestions to the MapServer Documentation Coordinator at
            <email>mdp@lists.gis.umn.edu</email>.
        </para>
        </sect2>
    </sect1>  
</article>
