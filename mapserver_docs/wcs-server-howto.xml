<?xml version="1.0" standalone="no"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://mapserver.gis.umn.edu/mdp/docbkx412/docbookx.dtd">
<article>
  <articleinfo>
    <title>Mapserver WCS Server HOWTO - Version 4.4</title>
    <author>
      <firstname>Steve</firstname>
      <surname>Lime</surname>
      <affiliation>
        <address>
          <email>sdlime@comcast.net</email>
        </address>
      </affiliation>
    </author>
    <date>2005-01-18</date>    
    <abstract>
      <!-- a short description of the contents of the doc -->
      <para>This document describes the procedures for setting up an OGC compliant Web Coverage Server (WCS) through the use of MapServer version 4.4.  
      </para>
      <para>Last Updated: 2005-06-13</para>
      <para>
          <link linkend="rhistory">Revision History</link>
      </para>       
    </abstract>
  </articleinfo>
  <sect1 id="intro">
    <title>Introduction</title>
    <para>
      A WCS (or Web Coverage Server) allows for the publication of "coverages"- digital geospatial information representing space-varying phenomena. In the MapServer world it allows for un-filtered access to raster data. Conceptually it is easy think of WCS as a raster equivalent of WFS. The following documentation is based on the <ulink url="https://portal.opengeospatial.org/files/?artifact_id=3837">Open GIS Consortium's (OGC) Web Coverage Server Interfaces Implementation Specification version 1.0.0</ulink>. 
    </para>
    <sect2 id="related">
      <title>WFS-Related information</title>
      <para>Here are some WFS related links. Since these are highly detailed technical specifications, there is no need to read through them in their entirety to get a MapServer WFS up and running.  It is still recommended however to read them over and get familiar with the basics of each of them, in order to understand how it all works:</para>
      <itemizedlist>
        <listitem>
          <para>The <ulink url="https://portal.opengeospatial.org/files/?artifact_id=3837">Open GIS Consortium's (OGC) Web Coverage Server Interfaces Implementation Specification version 1.0.0</ulink>.</para>
        </listitem>
      </itemizedlist>
      <para>Working knowledge of MapServer is of course also required.</para>
    </sect2>
    <sect2 id="software">
      <title>Software Requirements</title>
      <para>In order to enable MapServer to serve WCS, it MUST be compiled against certain librairies:</para>
      <itemizedlist>
        <listitem>
          <para>PROJ.4: The reprojection library. Version 4.4.3 or greater is required.</para>
        </listitem>
        <listitem>
          <para>GDAL: I/O support library. Version x.x.x or greater is required.</para>
        </listitem>
      </itemizedlist>
      <para>Please see the MapServer UNIX Compilation and Installation HOWTO for detailed instructions on compiling mapserver with support for these librairies and features.  For Windows users, look on the MapServer website to see if there are any binaries available that meet these requirements.</para>
    </sect2>
  </sect1>
  <sect1>
    <title>Configuring your MapFile to serve WCS layers</title>
    <para>Much as in the WMS and WFS support, WCS publishing is enabled by adding certain magic METADATA keyword/value pairs to a MapFile.</para>
    <para>MapServer will serve and include in its WCS capabilities only the layers that meet the following conditions:</para>
    <itemizedlist>
      <listitem>
        <para>Data source is of raster type that is processed using GDAL (e.g GeoTIFF, Erdas Imagine, ...)</para>
      </listitem>
      <listitem>
        <para>LAYER NAME must be set</para>
      </listitem>
      <listitem>
        <para>LAYER TYPE is RASTER</para>
      </listitem>
      <listitem>
        <para>LAYER DUMP parameter set to TRUE</para>
      </listitem>
    </itemizedlist>
    <sect2>
      <title>WEB object METADATA parameters</title>
      <para>WCS support tries to leverage existing WMS or OWS metadata definitions. The rationale being that many values will be the same regardless of the type of service. The module will look for the following metadata prefixes (in order): wcs_, ows_ and finally wms_ unless otherwise noted.</para>
      <variablelist>
        <varlistentry>
          <term>ows_schemas_location</term>
          <listitem>
            <para>
               (Optional) Location of XML schema document. Default is http://schemas.opengeospatial.net. 
               See http://ogc.dmsolutions.ca for an example of a valid schema tree.
            </para>
          </listitem>
        </varlistentry>      
        <varlistentry>
          <term>metadatalink</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>wcs_encoding</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>description</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>name</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>label</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>keywordlist</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>fees</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>accessconstraints</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>       
      </variablelist> 
      <para>There are two ways to define service contact information. The WCS way (using the "responsibleparty" tags:</para>
      <variablelist>
        <varlistentry>
          <term>responsibleparty_individualname (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>responsibleparty_organizationname (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>responsibleparty_postionname (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>        
        <varlistentry>
          <term>responsibleparty_address_deliverypoint (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>responsibleparty_address_city (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>responsibleparty_address_administrativearea (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>responsibleparty_address_postalcode (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>responsibleparty_address_country (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>responsibleparty_address_electronicmailaddress (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>responsibleparty_phone_voice (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>responsibleparty_phone_facsimile (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>responsibleparty_onlineresource (wcs_ or ows_)</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>               
      </variablelist>
      <para>Or using the method defined in the WMS support for mapserver:</para>
      <variablelist>
        <varlistentry>
          <term>contactperson</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>contactorganization</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>contactposition</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>        
        <varlistentry>
          <term>address</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>city</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>stateorprovince</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>postcode</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>country</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>contactelectronicmailaddress</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>contactvoicetelephone</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>contactfacsimiletelephone</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>service_onlineresource</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>
    <sect2>
      <title>LAYER object METADATA parameters</title>
      <para>WCS support tries to leverage existing WMS or OWS metadata definitions. The rationale being that many values will be the same regardless of the type of service. The module will look for the following metadata prefixes (in order): wcs_, ows_ and finally wms_ unless otherwise noted.</para>
      <variablelist>
        <varlistentry>
          <term>metadatalink</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>        
        <varlistentry>
          <term>description</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>name</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>label</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>keywordlist</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>timeposition</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>timeperiod</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>timeitem</term>
          <listitem>
            <para>The attribute in the spatio/temporal index that contains time values</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>extent</term>
          <listitem>
            <para>Must be provided with tiled data.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>srs</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>nativeformat</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>formats</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>Axis Descriptions: what are they? MapServer allows you define a number of these for a layer. Individual axis are identified by name when defining specific metadata (e.g. description). All defined axes must be listed in the rangeset_axes metadata tag so MapServer knows in advance what to expect. A special rangeset for multiband date is automatically generated by adding the name "bands" to the rangeset_axes list. If found MapServer will automatically generate metadata for the image bands. You may of course extend that basic support using the naming conventions below.</para>
      <variablelist>
        <varlistentry>
          <term>rangeset_axes</term>
          <listitem>
            <para>Delimited list of defined range sets.</para>
          </listitem>
        </varlistentry>
 
        <varlistentry>
          <term>{name}_semantic</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>{name}_refsys</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>{name}_refsyslabel</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>{name}_description</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>{name}_label</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>{name}_values</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>{name}_values_semantic</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>{name}_values_type</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>{name}_interval</term>
          <listitem>
            <para>Only a single interval is supported per axis.</para>
          </listitem>
        </varlistentry>
      </variablelist>      
    </sect2>
  </sect1>
  <sect1>
    <title>Rules for handling SRS in a MapServer WCS</title>
    <para>TODO!</para>    
  </sect1>
  <sect1>
    <title>Spatio/Temporal Indexes</title>
    <para>MapServer has long supported a method of breaking a dataset into smaller, more manageable pieces or tiles.  In this case a shapefile is used to store the boundary of each tile, and an attribute holds the location of the actual data. Within a MapServer mapfile the layer keywords TILEINDEX and TILEITEM are used to activate tiling.</para>
    <para>Consider the example where an organization wants to serve hundreds or even thousands of MODIS scenes. Five images cover the spatial extent and each group of five varies by date of acquisition.  This turns out to be a fairly common scenario for organizations interested in WCS, one that the existing tiling support does not adequately address.  In previous versions of MapServer a developer would have to create one tile index and one layer definition for each group of five images. This could result in configuration files that are prohibitively long and difficult to manage.</para>
    <para>In order to more efficiently support the WCS specification a new tiling scheme has been implemented within MapServer.  One that supports spatial sub-setting, but also ad hoc sub-setting based on any attributes found within tile index.  In many cases a temporal attribute could be used, but sub-setting is not limited to that case.  The new scheme introduces the concept of tile index layers, that is, a separate layer definition is used to describe the tile index dataset. With this we get all the benefits of any MapServer layer, most importantly we can apply MapServer filters to the data.  Filters can be defined at runtime using MapServer CGI, MapScript or via the WCS server interface.  The syntax for the layer using the index remains unchanged except that the value for TILEINDEX refers to the index layer instead of an external shapefile.</para>
    <para>So, looking at the example above again we can reduce our MapServer configuration to two layer definitions, one for the tile index and one for the imagery itself.  Extracting a single dates worth of imagery is now a matter of setting the appropriate filter within the tile index layer.</para>
 
    <para>Building Spatio-Temporal Tile Indexes</para>
    <para>Developing these tile indexes is more difficult than basic indexes simply because there are no ready-made tools to do so.  Fortunately we can leverage existing tool available within MapServer or supporting libraries such as GDAL by post processing their output.</para>
    <para>Taking the above example, building an index is relatively simple task if you are willing to roll up your sleeves and write a bit of code.  First, the basic spatial index needs to be built.  The GDAL utility gdaltindex already does this. Simply point gdaltindex at the directory containing the collection of MODIS images and it will build a shapefile index suitable for use with MapServer.  The next step would be to add the temporal information.  The pseudo code would look something like:</para>
    <itemizedlist>
      <listitem><para>open the index .dbf file for reading</para></listitem>
      <listitem><para>create a new column to hold the image acquisition date</para></listitem>
      <listitem><para>for each image; 1) extract the image acquisition date and 2) insert it into the new column</para></listitem>
      <listitem><para>close the index .dbf file</para></listitem>
    </itemizedlist>
    <para>This general approach could be used for many cases.  A scripting language such as Perl, PHP or Python works well since they all have readily available modules for manipulating .dbf files.  A worst case would involve hand editing the resulting .dbf file using a desktop tool such as Mircosoft Access or ESRI Arcview.</para>
  </sect1>  
  <sect1>
    <title>To-do items and known limitations</title>
    <itemizedlist>
      <listitem>
        <para>This is the initial release of WCS support for MapServer and it has not been widely used nor tested.</para>
      </listitem>
      <listitem>
        <para>For now we support only GET requests. The spec also talks about XML-encoded POST requests but that is not supported at this time. It is anticipated that a general XML request solution will be created for all OWS services.</para>
      </listitem>
      <listitem>
        <para>MapServer does not derive all of the metadata it could from a given dataset. For example, you must explicitly list time periods covered by a layer. This should get better with time.</para>
      </listitem>
      <listitem>
        <para>Only spatial, simple temporal and radiometric band subsetting is possible with the current implementation. Furture enhancements should allow for arbitrary subsets based on pixel values or tile/image attributes.</para>
      </listitem>       
    </itemizedlist>
  </sect1>
    <!-- Section1: Document Info -->
    <sect1 id="docinfo">
        <title>About This Document</title>
        <sect2 id="rhistory">
            <title>Revision History</title>
            <para>  
  The numbering is in parallel with the revision control
  system. Missing numbers indicate minor maintenance revision updates.
</para>
            <para>
                <revhistory>
                    <revision>
                        <revnumber>Number: 1.3</revnumber>
                        <date>Date: 2005-06-13</date>
                        <authorinitials>Author: Jeff McKenna</authorinitials>
                        <revremark>added ows_schemas_location metadata
                                   </revremark>
                    </revision>                 
                </revhistory>
            </para>
        </sect2>
        <sect2 id="copyright">
            <title>Copyright Information</title>
            <para>
    Copyright (c) 2005, Steve Lime
   </para>
            <para>
    This documentation is covered by the same Free Software license as the MapServer software.
    See MapServer's
    <ulink url="http://mapserver.gis.umn.edu/license.html">License and 
    Credits</ulink> page for the complete text.
   </para>
        </sect2>
        <sect2 id="disclaimer">
            <title>Disclaimer</title>
            <para>
    No liability for the contents of this document can be accepted.
    Use the concepts, examples and other content at your own risk.
    As this is a new edition of this document, there may be errors
    and inaccuracies that may be damaging to your system.
    Although this is highly unlikely, the author(s) do not take any 
    responsibility for that:  proceed with caution.
   </para>
        </sect2>
        <!-- Section2: feedback -->
        <sect2 id="feedback">
            <title>Feedback</title>
        <para>
            Input is appreciated.  Send any
            comments or suggestions to the MapServer Documentation Coordinator at
            <email>mdp@lists.gis.umn.edu</email>.
        </para>
        </sect2>
    </sect1>   
</article>
