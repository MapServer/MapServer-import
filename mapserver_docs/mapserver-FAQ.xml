<?xml version='1.0' standalone='no'?>
<!DOCTYPE qandaset PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
          "http://mapserver.gis.umn.edu/mdp/docbkx412/docbookx.dtd">

<qandaset>
<title>MapServer Frequently Asked Questions</title>

<!-- symbols file in 3.4+ -->
    <qandaentry>
      <question>
        <para>
        When I try running the demo with 3.4 I get the following error 
        message:  msLoadMap(): Unknown identifier. (SHADESET):(6).
        </para>
      </question>
      <answer>
        <para>
        The new version uses a unified symbol file format which means you can
        store all symbols in one file. This allows for inline definitions (i.e.
        within a mapfile) of symbols and more straight forward mapscript access.
        Anyway here's what's needed to switch:
        </para>
        <orderedlist>
          <listitem><para>The lines starting with SHADESET, MARKERSET, AND 
           LINESET and the last END keyword should be deleted.</para></listitem>
          <listitem><para>"SYMBOLSET symbol/symbol.sym" should be added
           </para></listitem>
          <listitem><para>Make the new symbols.sym file by concatenating the 
           three symbol files together.</para></listitem>
        </orderedlist>
        <para>
          The new symbols.sym file is also avialable online at <ulink 
          url="http://www2.dmsolutions.ca/mapserver/dl/symbols-for-ms34.sym">
          http://www2.dmsolutions.ca/mapserver/dl/symbols-for-ms34.sym</ulink>
        </para>
      </answer>
    </qandaentry>
    
<!-- Finding Fonts -->
    <qandaentry>
      <question>
        <para>
         How can I get MapServer to recognize partition letters (C:, D: E:)
         to find my fonts?
        </para>
      </question>
      <answer>
        <para>
        1. I put the fonts and the fonts.list in the same directory.  This 
        directory can be anywhere, in any drive (partition), so long as MapServer
        have read access to it.  In my case (and as an example), this directory
        resides in the E drive--E:\Projects\fonts.  I can't quite understand why 
        anyone would put fonts in several different directories and partitions.
        </para>

        <para>
        Here's a tidbit of my fonts.list--notice I don't have the paths included:
        <screen>
        andale-mono                     andalemo.ttf
        arial                           arial.ttf
        arial-bold                      arialbd.ttf
        arial-italic                    ariali.ttf
        arial-bold-italic               arialbi.ttf
        arial_black                     ariblk.ttf
        arial_narrow                    arialn.ttf
        arial_narrow-bold               arialnb.ttf
        arial_narrow-italic             arialni.ttf
        arial_narrow-bold-italic        arialnbi.ttf
        </screen>
        </para>

        <para>
        By the way, the projects directory (E:\Projects) is also mapped as a
        virtual directory (an alias) for the web server (/projects).  I don't
        think this matters for the fonts and mapserver...  I could be wrong.
        </para>

         <para>
         2. In my map file, I add the line:
           <literal>FONTSET "E:\Projects\fonts"</literal>
        </para>
      </answer>
    </qandaentry>

<!-- True Type font -->
    <qandaentry>
      <question>
        <para>
          Does anyone have a bat file or an exe file that I can
          use to delete MapServer temp files on Windows? 
        </para>
      </question>
      <answer>
        <para>
         Answer 1:  
          For those of you who use windows, there is an executable on our site that
          can be used to delete tmp files created by mapserver. <ulink 
          url="http://www2.dmsolutions.on.ca/webtools/dl/deltmpfiles.zip">
          http://www2.dmsolutions.on.ca/webtools/dl/deltmpfiles.zip</ulink>
        </para>

        <para>
          Answer 2:
          On Windows 2000 Server we use a simple .cmd file that has one line:
          del C:/temp/*.gif.  The cmd file is run daily by the Task Scheduler 
          service, which is available on Win98SE and above, I believe. The 
          Task Scheduler is usually found in the Start Menu in 
          Program Files->Accessories->System Tools.
        </para>
        <para>
          .cmd files are similar to batch files (.bat) so perhaps on Win98 a batch
          file would work when scheduled to run by the Task Scheduler. Since you have
          Win95, perhaps you could run the bat file automatically when the machine
          reboots. Assuming you reboot daily at the most and weekly at the least, this
          could meet your needs if the machine has enough disk space.
        </para>
      </answer>
    </qandaentry>
<!-- compiling on windows with SDE support -->
    <qandaentry>
      <question>
        <para>
         How do I compile MapServer with SDE support on Windows?
        </para>
      </question>
      <answer>
        <para>
         THE PROBLEM:
        </para>
        <para>
            When compiling mapserver with SDE support in win32 the libraries provided by
            ESRI are not compatible with Microsoft Visual C++ as the symbol names in the
            ESRI SDE do not match the symbol names that mapserver needs when linking the
            project. When linking a C++ program together all the symbol names must
            match. When linking the mapserver project it is looking for symbol names
            like "_SE_connection_free" or "_SE_error_get_string" but can not find them.
            If you look through the SDE libraries you can easily find these symbols, so
            why doesn't it link?. Well the answer is simple, when Visual C++ creates the
            library file it strips the preceding "_" and following "@xxx" when it places
            the symbol name into the libraries export table. Therefore the name in the
            export table is "SE_connection_free" instead of "_SE_connection_free". The
            means that the symbol names are not matching and the linker can not find the
            correct symbols and produces the errors listed above.  This results in errors
            such as the following:
         <screen>
         mapserver.lib(mapsde.obj) : error LNK2001: unresolved external symbol
         _SE_connection_free
        </screen>
        </para>
        <para>
            THE SOLUTION:
        </para>
        <para>
            There is a solution to this problem and it is to creating a DEF file for the
            SDE library. In the DEF file, include an EXPORTS section that contains the
            names of the functions to be included in the library.
        </para>
        <para>
          Contents of SDE80.DEF:
<programlisting><![CDATA[
EXPORTS
  SE_connection_free =_SE_connection_free
  SE_shape_free = _SE_shape_free
  SE_stream_free = _SE_stream_free
  SE_shape_clip = _SE_shape_clip
  SE_shape_is_nil = _SE_shape_is_nil
  SE_stream_fetch = _SE_stream_fetch
  SE_stream_execute = _SE_stream_execute
  SE_stream_describe_column = _SE_stream_describe_column
  SE_stream_bind_output_column = _SE_stream_bind_output_column
  SE_stream_set_spatial_constraints = _SE_stream_set_spatial_constraints
  SE_stream_query = _SE_stream_query
  SE_stream_create = _SE_stream_create
  SE_sql_construct_alloc = _SE_sql_construct_alloc
  SE_shape_generate_rectangle = _SE_shape_generate_rectangle
  SE_shape_create = _SE_shape_create
  SE_layerinfo_get_envelope = _SE_layerinfo_get_envelope
  SE_layerinfo_get_coordref = _SE_layerinfo_get_coordref
  SE_coordref_create = _SE_coordref_create
  SE_layer_get_info = _SE_layer_get_info
  SE_layerinfo_create = _SE_layerinfo_create
  SE_connection_create = _SE_connection_create
  SE_error_get_string = _SE_error_get_string
  SE_shape_get_all_points = _SE_shape_get_all_points
  SE_shape_get_num_points = _SE_shape_get_num_points
  SE_shape_get_type = _SE_shape_get_type
  SE_shape_get_num_parts = _SE_shape_get_num_parts
]]></programlisting>
        </para>
        <para>
            Place this file in the same directory as the SDE80.LIB file and use the
            Microsoft 32-bit LIB utility with the /MACHINE and /DEF switches (e.g.
            <command>LIB /MACHINE:i386 /DEF:SDE80.DEF</command>).
        </para>
        <para>
          This will alter the SDE80.LIB library so when linking the library with the
          rest of mapserver the symbol reference are resolved and hence the problem is
          solved. Compile the program as before and all your problems should
          disappear.
        </para>
        <screen>
         For more Information see:
           Microsoft Systems Journal
           July 1996
           Under the Hood
           Written by Matt Pietrek (71774.362@compuserve.com)

           Compiling Mapserver with SDE support on win32 written by
           Egon Kuster
           Defence Science and Technology Organisation
           egon.kuster@dsto.defence.gov.au
        </screen>
      </answer>
    </qandaentry>

</qandaset>
