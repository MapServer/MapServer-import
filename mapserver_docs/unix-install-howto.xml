<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- edited with XML Spy v4.2 U (http://www.xmlspy.com) by Jean-Francois Doyon (Natural Resources Canada) -->
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://mapserver.gis.umn.edu/mdp/docbkx412/docbookx.dtd">
<article>
	<articleinfo>
		<title>MapServer UNIX Compilation and Installation HOWTO</title>
		<author>
			<firstname>Jean-Fran&ccedil;ois</firstname>
			<surname>Doyon</surname>
			<affiliation>
				<orgname>Natural Resources Canada</orgname>
				<orgdiv>Earth Sciences Sector</orgdiv>
				<orgdiv>Canada Centre for Remote Sensing</orgdiv>
				<orgdiv>GeoAccess Division</orgdiv>
				<address>
					<email>jdoyon@nrcan.gc.ca</email>
				</address>
			</affiliation>
		</author>
		<abstract>
			<para>
    			This document describes the procedures for obtaining, compiling and installing MapServer 3.7 on UNIX-type platforms.
    			</para>
			<para>Last Updated:  01-06-2003</para>
		</abstract>
	</articleinfo>
	<sect1 id="intro">
		<title>Introduction</title>
		<para>
  The University of Minnesota's MapServer is an open-source and freely available map rendering engine for the web.  Due to its
  open-source nature, it can be compiled on a wide variety of platforms and operating systems.  We will focus on how to obtain, compile
  and install MapServer on UNIX-like platforms. Throughout this document we will use the popular Linux and Apache combination for the
  examples, as well as the MapServer demo package.  
  </para>
		<para>
  This document assumes you are already familiar with basic aspects of your operating system and web server:
  </para>
		<itemizedlist>
			<listitem>
				<para>Shell environment</para>
			</listitem>
			<listitem>
				<para>File system layout and permissions</para>
			</listitem>
			<listitem>
				<para>Build environment, notably <application>autoconf</application> and <application>make</application>
				</para>
			</listitem>
			<listitem>
				<para>Basic web server configuration, CGI environment</para>
			</listitem>
		</itemizedlist>
	</sect1>
	<sect1 id="obtain">
		<title>Obtaining the necessary software</title>
		<para>
  You can obtain the source code as well as the demo package from the MapServer site, located at <ulink url="http://mapserver.gis.umn.edu">http://mapserver.gis.umn.edu</ulink>.
  </para>
		<para>
  MapServer also makes use of a variety of external libraries to enhance its functionality.  Here is a short, descriptive list of
  the libraries and what purpose they serve:
  </para>
		<itemizedlist>
			<listitem>
				<para>
					<ulink url="http://www.boutell.com/gd/">GD</ulink>: For rendering GIFs or PNGs (Mandatory).</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://www.remotesensing.org/proj/">PROJ.4</ulink>: For on-the-fly projection conversion (Recommended, mandatory for WMS Support). For WMS, you will need AT LEAST version 4.4.3.</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://curl.haxx.se/libcurl/">LibCURL</ulink>: For WMS/WFS Client Connections support (Optional, required WMS/WFS Support). Version 7.10 or greater required.</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://www.libtiff.org/">LibTIFF</ulink>: For TIFF support (Optional).</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://www.remotesensing.org/geotiff/geotiff.html">LibGeoTIFF</ulink>: For GeoTIFF (Geo-Referenced TIFF Images) Support (Optional).</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="ftp://ftp.uu.net/graphics/jpeg/">LibJPEG</ulink>: For JPEG Support (Optional).</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://www.freetype.org">FreeType</ulink>: For TrueType font support.  This is used through GD only, mapserver does not compile against it directly.  Version 1 is recommended and works best, issues have been reported with version 2.
				</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://gdal.velocet.ca/projects/opengis/">OGR Simple Features Library</ulink>: For providing I/O for a variety of VECTOR file formats (Optional).</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://www.remotesensing.org/gdal/">GDAL - Geospatial Data Abstraction Library</ulink>: For providing I/O for a number of RASTER formats (Optional).</para>
			</listitem>
			<listitem>
				<para>SDE Client Librairies: These libraries are provided with ESRI's Spatial Data Warehouse ArcSDE (Optional).</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://www.postgresql.org">PostgreSQL</ulink> Client: In order for MapServer to be able to read PostGIS data, it needs to be compiled against the PostgreSQL client libraries.</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://www.cbmamiga.demon.co.uk/mpatrol/">MPATROL</ulink>: For debugging  (Developers only).</para>
			</listitem>
			<listitem>
				<para>Oracle Spatial Client Librairies:  These librairies are provided with your Oracle product, and used to interface with an Oracle Spatial warehouse.</para>
			</listitem>
		</itemizedlist>
	</sect1>
	<sect1>
		<title>The GD issues</title>
		<sect2>
			<title>GIF Output</title>
			<para>MapServer uses the Open-Source <ulink url="http://www.boutell.com/gd/">GD library</ulink> to render it's output.  The more recent versions of this library (Post 1.6) do NOT support GIF output, recommending instead the superior PNG format.</para>
			<para>This is due to the fact that the LZW Compression algorythm used in GIF's is copyrighted to UNISYS, which has recently started enforcing it's Intellectual Property rights.  This means anyone who whishes to use GIF imaging must use properly licensed software, or pay royalties to UNISYS.</para>
			<para>Starting with version 3.5 of MapServer, the old GD 1.2 is no longer included with the code. If you wish to use GIF output with the more recent versions of GD, and are properly licensed to do so, you can obtain patched versions of the library in Australia, at the following address: <ulink url="http://www.rhyme.com.au/gd/">http://www.rhyme.com.au/gd/</ulink>.</para>
			<para>Not sure whether your GD supports GIFs? Here's how you can tell:</para>
			<para>When you run your "configure" script, look for the following output:</para>
			<screen>        using GD ( -DUSE_GD_GIF -DUSE_GD_PNG -DUSE_GD_JPEG -DUSE_GD_WBMP
         -DUSE_GD_TTF -DGD_HAS_GDIMAGEGIFPTR) from system libs.</screen>
			<para>If your GD is built with GIF support, you will see the "-DUSE_GD_GIF" part.  If it's missing, you will need to either use PNG images or obtain the patched GD mentionned above (After paying for the rights, of course).</para>
		</sect2>
		<sect2>
			<title>TrueType Font Support</title>
			<para>Also, starting with version 3.5 of MapServer, the GD you compile MapServer against MUST be compiled against the FreeType library in order to use TrueType fonts.  MapServer no longer uses it's own interface to FreeType, using it through GD instead.</para>
			<para>Not sure whether your GD qualifies? Here's how you can tell:</para>
			<para>When you run your "configure" script, look for the following output:</para>
			<screen>        using GD ( -DUSE_GD_GIF -DUSE_GD_PNG -DUSE_GD_JPEG -DUSE_GD_WBMP
          -DUSE_GD_TTF -DGD_HAS_GDIMAGEGIFPTR) from system libs.</screen>
			<para>If your GD is built against FreeType, you will see either "-DUSE_GD_TTF" (Or "-DUSE_GD_FT" for Freetype 2.x) part.  If it's missing, you will need to recompile your GD to make sure you include FreeType support. Please see the <ulink url="http://www.boutell.com/gd/">GD</ulink> documentation for help with that.</para>
			<para>Also note that the configure script looks for the Freetype library seperatly as well, generating output looking somewhat like this:</para>
			<screen>
checking where FreeType is installed...
checking for FT_Init_FreeType in -lfreetype... yes
	using libfreetype -lfreetype from system libs.
			</screen>
			<para>Now, because you have Freetype installed on your system, and because the configure script finds it, does NOT mean you will have TrueType font support.  GD MUST be compiled against Freetype either way.</para>
		</sect2>
	</sect1>
	<sect1>
		<title>OGC WMS Support</title>
		<sect2>
			<title>Server</title>
			<para>MapServer supports the OpenGIS' <ulink url="http://www.opengis.org/">OpenGIS Consortium</ulink>'s <ulink url="http://www.opengis.org/techno/specs/00-028.pdf">Web Map Server</ulink> specification.</para>
			<para>Support for this specification is automatically enabled when you include PROJ.4 support.</para>
			<para>You can check this yourself by looking for the following in your "configure" output:</para>
			<screen>checking whether we should include WMS support...
        OGC WMS compatibility enabled (-DUSE_WMS).
			</screen>
			<para>If, for some reason you DON'T want WMS support, you can force it off by passing "--without-wms" to your configure script.</para>
			<para>More information on using this feature is available in the WMS Server HOWTO available on the MapServer website.</para>
		</sect2>
		<sect2>
			<title>Client</title>
			<para>Cascading is also supported.  This allows mapserver to transparently fetch remote layers over WMS, basically acting like a client, and combine them with other layers to generate the final map.</para>
			<para>In order to enable this feature, you will need to pass the "--with-wmsclient" option to the configure script. MapServer will automatically look for libcurl, which is also required.</para>
			<para>To verify that the WMS Client feature is enabled, check the output from the configure script:</para>
			<screen>checking whether we should include WMS Client Connections support...
	OGC WMS Client Connections enabled (-DUSE_WMS_LYR).
			</screen>
			<para>Note that this feature is disabled by default, you have to specifically request it.</para>
			<para>More information on using this feature is available in the WMS Client HOWTO available on the MapServer website.</para>
		</sect2>
	</sect1>
	<sect1>
		<title>OGC WFS Support</title>
		<sect2>
			<title>Server</title>
			<para>New with version 3.7 of MapServer is support for the <ulink url="http://www.opengis.org/">OpenGIS Consortium</ulink>'s <ulink url="http://www.opengis.org/techno/specs/02-058.pdf">Web Feature Service</ulink> standard.</para>
			<para>Support for this specification is enabled by passing the configure script the "--with-wfs" option.  OGR and PROJ.4 support is required.</para>
			<para>You can check this yourself by looking for the following in your "configure" output:</para>
			<screen>checking whether we should include WFS Server support...
        OGC WFS Server support enabled (-DUSE_WFS_SVR).
			</screen>
			<para>Note that this feature is disabled by default, you have to specifically request it.</para>
			<para>More information on using this feature is available in the WFS Server HOWTO available on the MapServer website.</para>
		</sect2>
		<sect2>
			<title>Client</title>
			<para>MapServer can also act as a WFS client.  This effectively means that MapServer reads it's data from a remote server's WFS output and renders it into a map, just like it would when reading data from a shapefile.</para>
			<para>In order to enable this feature, you will need to make sure you include OGR (Built with Xerces support) and PROJ.4 support, and pass the "--with-wfsclient" option to your configure script. MapServer will automatically look for libcurl, which is also required.</para>
			<para>To verify that the WFS Client feature is enabled, check the output from the configure script:</para>
			<screen>checking whether we should include WFS Client Connections support...
        OGC WFS Client Connections enabled (-DUSE_WFS_LYR).
			</screen>
			<para>Note that this feature is disabled by default, you have to specifically request it.</para>
			<para>More information on using this feature is available in the WFS Client HOWTO available on the MapServer website.</para>
		</sect2>
	</sect1>
	<sect1>
		<title>Spatial Warehousing</title>
		<para>MapServer can use a wide variety of sources of data input.  One of the solutions growing in popularity is to use spatially enabled databases to store data, and to use them directly to draw maps for the web.</para>
		<para>Here you will find out how to enable mapserver to talk to one of these products.  Please refer to the MapFile reference for more details on how to use these.  This section only details how to compile MapServer for their use.</para>
		<sect2>
			<title>ESRI SDE</title>
			<para>MapServer allows you to use SDE as a data source both for geometry and attributes.  In order to achieve this, you must have the SDE client librairies at your disposition, and have them installed on the machine running MapServer.</para>
			<para>In order to enable SDE support in MapServer, you have to compile it with 2 options specified:</para>
			<itemizedlist>
				<listitem>
					<para>--with-sde: This option allows you to specifiy where to find the SDE client librairies</para>
				</listitem>
				<listitem>
					<para>--with-sde-version: This option allows you to specify the version of the librairies. You can use values such as "80" or "81".</para>
				</listitem>
			</itemizedlist>
		</sect2>
		<sect2>
			<title>PostGIS</title>
			<para>
				<ulink url="http://postgis.refractions.net">PostGIS</ulink> adds support for geographic objects to the <ulink url="http://www.postgresql.org">PostgreSQL</ulink> object-relational database. In effect, PostGIS "spatially enables" the PostgreSQL server, allowing it to be used as a backend spatial database for geographic information systems (GIS), much like ESRI's SDE or Oracle's Spatial extension.</para>
			<para>As with SDE, MapServer can use PostGIS as a data source.  In order to do so simply use "--with-postgis" when running your configure script.</para>
		</sect2>
		<sect2>
			<title>Oracle Spatial</title>
			<para>Oracle's Spatial Warehousing cartrige is also supported by MapServer.  In order to connect to it, you will need to compile MapServer against the Oracle librairies by passing the "--with-oraclespatial" argument to your configure script.</para>
		</sect2>
	</sect1>
	<sect1 id="compiling">
		<title>Compiling</title>
		<para>The first thing you should do is unpack the source code tar-ball:

  <screen>
  [user@host user]$ tar -zxvf ms_3.5.000.tar.gz
  </screen>

  This will unpack the file into a directory called "mapserver".

  </para>
		<sect2 id="quickcompile">
			<title>The QUICK and DIRTY way</title>
			<para>If you're in a hurry (*NOT* recommended!), try this:
   <screen>
   [user@host user]$ cd mapserver
   [user@host mapserver]$ ./configure
   [user@host mapserver]$ make
   </screen>

   That's it! Unless errors were produced, MapServer is now compiled and ready to go.  You can now skip to the <link linkend="installation">
   installation</link> section.

   </para>
		</sect2>
		<sect2 id="compileproper">
			<title>The RIGHT way</title>
			<para>There are two major steps to properly compile the MapServer program from source: configuring the source code, and actually compiling it.</para>
			<sect3 id="configure">
				<title>Configuring the source code</title>
				<para>The best way to find out the options available at compile time is to run <application>configure</application> with the help
  parameter:</para>
				<screen>
  [user@host user]$ cd mapserver
  [user@host mapserver]$ ./configure --help
  </screen>
				<para>You will note the ability to specify which library to use, and from which location.  Under normal circumstances the configuration
  script will automatically find all the libraries on your system and use them:</para>
				<screen>
  [user@host mapserver]$ ./configure
  </screen>
				<para>Note the output of the above command and make sure that the configure script located all the libraries you want it to use.  If not, you may have to manually specify the location of the libraries (see the example in the following section).</para>
				<sect4 id="manlib">
					<title>Requesting specific libraries</title>
					<para>Some libraries will NEVER be detected by default, and HAVE to be specified via the configure script.</para>
					<para>The libraries are:</para>
					<itemizedlist>
						<listitem>
							<para>PROJ.4: The on-the-fly projection conversion library (--with-proj).</para>
						</listitem>
						<listitem>
							<para>SDE: Libraries for ESRI's Spatial Data Engine. These come from ESRI's product (--with-sde).</para>
						</listitem>
						<listitem>
							<para>MPATROL: A debugging library (--with-mpatrol).</para>
						</listitem>
						<listitem>
							<para>OGR: The VECTOR file formats I/O library (--with-ogr).</para>
						</listitem>
						<listitem>
							<para>GDAL: The RASTER file formats I/O library (--with-gdal).</para>
						</listitem>
						<listitem>
							<para>LibWWW: The W3C's WWW library (--with-wmsclient).</para>
						</listitem>
					</itemizedlist>
					<para>If the configure script can't find the libraries, you can always specify their location manually by appending the path
          to the option.  For the SDE libraries, for instance, you might type "--with-sde=/usr/lib/sde/".</para>
				</sect4>
			</sect3>
			<sect3 id="compile">
				<title>Compiling the source code</title>
				<para>Now that you have configured your build options and selected all the libraries you wish mapserver to use, you're ready to
        compile the source code into an executable.</para>
				<para>This is actually quite simple, just execute "make":</para>
				<screen>
  [user@host mapserver]$ make
  </screen>
				<para>If all goes well, some information will move across the screen and the process will come to a stop, returning you
to the shell prompt.  At this point, your directory should hold your brand new, customized mapserver executable binary.</para>
				<para>To make sure all went well, first just look for the file, it's called "mapserv", and should be set executable:</para>
				<screen>
  [user@host mapserver]$ ls -al mapserv
  -rwxr-xr-x    1 user     user       351177 Dec 21 11:38 mapserv
  </screen>
				<para>A simple test is to try and run it:</para>
				<screen>
  [user@host mapserver]$ ./mapserv
  This script can only be used to decode form results and
  should be initiated as a CGI process via a httpd server.
  [user@host mapserver]$
  </screen>
				<para>The message above is perfectly normal, and means exactly what it says.  If you get anything else, something went terribly
wrong.  Send a message to the MapServer users list (<email>mapserver-users@lists.gis.umn.edu</email>) for help.</para>
				<para>Congratulations! You are now ready to proceed with the installation.</para>
			</sect3>
		</sect2>
	</sect1>
	<sect1 id="installation">
		<title>Installation</title>
		<sect2>
			<title>MapServer binary</title>
			<para>The MapServer program itself consists of only one file, the "mapserv" binary executable.  This is a CGI executable, meant to be
   called and run by your web server.</para>
			<para>In this section, we will assume you are running Apache under its default directory structure in /usr/local/apache.  You may need to have privileges to edit your httpd.conf (the main apache configuration file), or have someone (such as your webmaster) help you with the configuration details.</para>
			<para>The main goal is to get the "mapserv" binary installed in a publicly accessible directory that is configured to run CGI programs and scripts.</para>
			<sect3>
				<title>The basic install</title>
				<para>Under a default configuration, the CGI directory is "/usr/local/apache/cgi-bin" (RedHat users will use "/home/httpd/cgi-bin").  Placing the mapserv file in this directory makes it accessible by the following URL: "http://yourhostname.com/cgi-bin/mapserv".  When accessing this URL through your web client, you should expect the following output if all has worked well: "No query information to decode. QUERY_STRING is set, but empty." If you get this message, you're done installing MapServer.</para>
			</sect3>
			<sect3>
				<title>Common problems</title>
				<sect4>
					<title>File permissions</title>
					<para>The most common problem one is likely to encounter when attempting to install the binary are permissions issues:</para>
					<itemizedlist>
						<listitem>
							<para>You do not have write permissions into your web server's CGI Directory.  Ask your webmaster to install the file for you.</para>
						</listitem>
						<listitem>
							<para>The web server gives you a "403 Permission denied" error.  Make sure the user the web server runs as (usually "nobody") has execute permission on the binary executable.  Making the file world executable is perfectly fine and safe:</para>
							<screen>[user@host cgi-bin]$ chmod o+x mapserv</screen>
						</listitem>
					</itemizedlist>
				</sect4>
				<sect4>
					<title>Web server configuration problems</title>
					<para>You may receive a few different type of errors as well if your web server configuration isn't right:</para>
					<itemizedlist>
						<listitem>
							<para>500 Internal server error: This is a fairly generic error message.  All it basically tells you is that the web server was unsuccessful in running the program.  You will have to consult the web server's error log to find out more, and may need to enlist the help of your webmaster/system administrator.</para>
						</listitem>
					</itemizedlist>
				</sect4>
			</sect3>
		</sect2>
		<sect2>
			<title>MapServer Demo</title>
			<para>In order to test the usability of your MapServer installation, you will need some sample data and interfaces.  It is recommended
that you use the MapServer Demo for this purpose.  See the MapServer Demo Installation Instructions at <ulink url="http://mapserver.gis.umn.edu/demo_readme.html">http://mapserver.gis.umn.edu/demo_readme.html</ulink> for
instructions.</para>
		</sect2>
	</sect1>
</article>
