<?xml version="1.0" standalone="no"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
          "http://mapserver.gis.umn.edu/mdp/docbkx412/docbookx.dtd">
<!-- $Id$ -->
<article>
  <articleinfo>
    <title>MapServer WMS Server HOWTO - Version 4.4</title>
    <author>
      <firstname>Jeff</firstname>
      <surname>McKenna</surname>
      <affiliation>
        <orgname>DM Solutions Group Inc.</orgname>
        <address>
          <email>jmckenna@dmsolutions.ca</email>
        </address>
      </affiliation>
    </author>
    <date>2004-03-07</date>
    <abstract>
      <!-- a short description of the contents of the doc -->
      <para>
                 This document describes the procedures for setting up an OGC compliant Web Map Server (WMS) through
          the use of MapServer v3.5 (and later).  
      </para>
      <para>Last Updated: 2004-11-02</para>
      <para>
          <link linkend="rhistory">Revision History</link>
      </para>      
    </abstract>
  </articleinfo>
  <sect1 id="intro">
    <title>Introduction</title>
    <para>
            A WMS (or Web Map Server) allows for use of data from several different servers, and enables for the creation of a
        network of Map Servers from which clients can build customized maps.  
      The following documentation is based on the <ulink url="http://www.opengis.org/docs/01-068r2.pdf">
                Open GIS Consortium's (OGC) Web Map Server Interfaces Implementation Specification v1.1.1</ulink>. 
    </para>
    <para>
      MapServer v3.5 or more recent is required to implement WMS features.  At the time this document was written, Mapserver
         supports the following WMS versions: 1.0.0, 1.0.7, 1.1.0 (a.k.a. 1.0.8), and 1.1.1.
    </para>
    <para>
             This document assumes that you are already familiar with certain aspects of MapServer:
          </para>
    <itemizedlist>
      <listitem>
        <para>
                      MapServer application development and setting up .map files. 
                </para>
      </listitem>
      <listitem>
        <para>
          Familiarity with the WMS spec would be an asset. A link to the WMS specification document is included in
          the <link linkend="links">"WMS-Related Information"</link> section below.
        </para>
      </listitem>
    </itemizedlist>
    <sect2 id="howitworks">
      <title>How does a WMS Work</title>
      <para>
        WMS servers interact with their clients via the HTTP protocol.  In most cases,
        a WMS server is a CGI program.  This is also the case with MapServer.     
      </para>
      <para>
        The WMS specification defines a number of request types, and for each of 
        them a set of query parameters and associated behaviors.  A WMS-compliant 
        server MUST be able to handle at least the following 2 types of WMS requests:
      </para>
      <orderedlist>
        <listitem>
          <para>
            <emphasis>GetCapabilities:</emphasis> return an XML document with metadata of the Web Map
            Server's information      
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>GetMap:</emphasis> return an image of a map according to the user's needs.
          </para>
        </listitem>
      </orderedlist>
      <para>
        And support for the following types is optional:
      </para>
      <orderedlist continuation="continues">
        <listitem>
          <para>
            <emphasis>GetFeatureInfo:</emphasis> return info about feature(s) at a query (mouse click) 
              location.  MapServer supports 3 types of responses to this request:
          </para>
          <orderedlist>
            <listitem>
              <para>
                  Text/plain output with attribute info.
              </para>
            </listitem>
            <listitem>
              <para>
                  Text/html output using MapServer query templates specified in the CLASS template parameter.
                  The MIME type returned by the Class templates defaults to text/html and can be controlled using the
                  metadata  <link linkend="mime_type">"wms_feature_info_mime_type"</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                Gml features.
              </para>
            </listitem>
          </orderedlist>
        </listitem>
        <listitem>
          <para>
            <emphasis>DescribeLayer:</emphasis> return an XML description of one or more map layers.  This
                applies only to SLD WMS servers and is not currently supported by 
                MapServer.
          </para>
        </listitem>
      </orderedlist>
      <para>
        With respect to MapServer specifically, it is the "mapserv" CGI program that
        knows how to handle WMS requests.  So setting up a WMS server with MapServer
        involves installing the mapserv CGI program and a setting up a mapfile with 
        appropriate metadata in it.  This is covered in the rest of this document.
      </para>
    </sect2>
    <sect2 id="links">
      <title>Links to WMS-Related Information</title>
      <itemizedlist>
        <listitem>
          <para>
            The Mapserver WMS Client HOWTO:
            <ulink url="http://mapserver.gis.umn.edu/doc/wms-client-howto.html">
            http://mapserver.gis.umn.edu/doc/wms-client-howto.html</ulink>
          </para>
        </listitem>
        <listitem>
          <para>
            Open Geospatial Consortium (OGC) Home Page:
              <ulink url="http://www.opengeospatial.org/">http://www.opengeospatial.org/</ulink>
          </para>
        </listitem>
        <listitem>
          <para>
            WMS 1.0.0 specification:
              <ulink url="http://www.opengis.org/docs/00-028.pdf">
            http://www.opengis.org/docs/00-028.pdf</ulink>
          </para>
        </listitem>
        <listitem>
          <para>
            WMS 1.1.0 specification:
              <ulink url="http://www.opengis.org/docs/01-047r2.pdf">
            http://www.opengis.org/docs/01-047r2.pdf</ulink>
          </para>
        </listitem>
        <listitem>
          <para>
            WMS 1.1.1 specification:
              <ulink url="http://www.opengis.org/docs/01-068r2.pdf">
            http://www.opengis.org/docs/01-068r2.pdf</ulink>
          </para>
        </listitem>
        <listitem>
          <para>
            WMS-Dev mailing list and archive:
              <ulink url="http://www.intl-interfaces.net/mailman/listinfo/wms-dev">
            http://www.intl-interfaces.net/mailman/listinfo/wms-dev</ulink>
          </para>
        </listitem>
        <listitem>
          <para>
            WMS FAQ:
              <ulink url="http://www.intl-interfaces.net/cookbook/WMS/faq/faqw.py?req=home">
            http://www.intl-interfaces.net/cookbook/WMS/faq/faqw.py?req=home</ulink>
          </para>
        </listitem>
        <listitem>
          <para>
            WMS XML Capabilities validator:
              <ulink url="http://www.digitalearth.gov/wmt/xml/validator.html">
            http://www.digitalearth.gov/wmt/xml/validator.html</ulink>
          </para>
        </listitem>
        <listitem>
          <para>
            WMS Cookbook:
              <ulink url="http://www.intl-interfaces.net/cookbook/WMS/">
            http://www.intl-interfaces.net/cookbook/WMS/</ulink>
          </para>
        </listitem>
        <listitem>
          <para>
            MapServer OGC Web Services Workshop package <ulink url="http://devgeo.cciw.ca/ms_ogc_workshop/index.html">
           http://devgeo.cciw.ca/ms_ogc_workshop/index.html</ulink>.
          </para>
        </listitem>         
      </itemizedlist>
    </sect2>
  </sect1>
  <!-- Section1: Integration or developing  an application-->
  <sect1 id="settingup">
    <title>Setting Up a WMS Server Using Mapserver</title>
    <sect2 id="install">
      <title>Install the Required Software</title>
      <para>
        WMS requests are handled by the "mapserv" CGI program.  Not all versions of the
        mapserv program do include WMS support (it is included by default when you 
        compile together with the PROJ library), so the first step is to check that
        your mapserv executable includes WMS support.  One way to verify this is to
        use the "-v" command-line switch and look for "SUPPORTS=WMS_SERVER".
      </para>
      <example>
        <title>On Unix:</title>
        <programlisting>
   $ ./mapserv -v
   MapServer version 4.2-beta1 OUTPUT=GIF OUTPUT=PNG OUTPUT=JPEG OUTPUT=WBMP 
   OUTPUT=PDF OUTPUT=SWF SUPPORTS=PROJ SUPPORTS=FREETYPE SUPPORTS=WMS_SERVER 
   SUPPORTS=WMS_CLIENT SUPPORTS=WFS_SERVER SUPPORTS=WFS_CLIENT INPUT=POSTGIS 
   INPUT=OGR INPUT=GDAL INPUT=SHAPEFILE 
        </programlisting>
      </example>
      <example>
        <title>On Windows:</title>
        <programlisting>
   C:\apache\cgi-bin> mapserv -v
   MapServer version 4.2-beta1 OUTPUT=GIF OUTPUT=PNG OUTPUT=JPEG OUTPUT=WBMP 
   OUTPUT=PDF OUTPUT=SWF SUPPORTS=PROJ SUPPORTS=FREETYPE SUPPORTS=WMS_SERVER 
   SUPPORTS=WMS_CLIENT SUPPORTS=WFS_SERVER SUPPORTS=WFS_CLIENT INPUT=POSTGIS 
   INPUT=OGR INPUT=GDAL INPUT=SHAPEFILE
        </programlisting>
      </example>
    </sect2>
    <sect2 id="mapfile">
      <title>Setup a Mapfile For Your WMS</title>
      <para>
        Each instance of WMS server that you setup needs to have its own mapfile.
        It is just a regular MapServer mapfile in which some parameters and some 
        metadata entries are mandatory.  Most of the metadata is required in order 
        to produce a valid GetCapabilites output.
      </para>
      <para>
        Here is the list of parameters and metadata items that usually optional with
        MapServer, but are required (or strongly recommended) for a WMS configuration:
      </para>
      <para>
        At the map level:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            Map NAME
          </para>
        </listitem>
        <listitem>
          <para>
            Map PROJECTION
          </para>
        </listitem>
        <listitem>
          <para>
            Map Metadata (in the WEB Object):
          </para>
          <itemizedlist>
            <listitem>
              <para>
                wms_title
              </para>
            </listitem>
            <listitem>
              <para>
                wms_onlineresource
              </para>
            </listitem>
            <listitem>
              <para>
                wms_srs (unless PROJECTION object is defined using "init=epsg:...")
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
      <para>
        And for each layer:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            Layer NAME
          </para>
        </listitem>
        <listitem>
          <para>
            Layer PROJECTION
          </para>
        </listitem>
        <listitem>
          <para>
            Layer Metadata
          </para>
          <itemizedlist>
            <listitem>
              <para>
                wms_title
              </para>
            </listitem>
            <listitem>
              <para>
                wms_srs (optional since the layers inherit the map's SRS value)
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
      <para>
        Let's go through each of these paramters in more detail:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            Map Name and wms_title:
          </para>
          <para>
            WMS Capabilities requires a Name and a Title tag for every layer.  The
              Map's NAME and wms_title metadata will be used to set the root layer's
              name and title in the GetCapabilities XML output.  The root layer in the
              WMS context corresponds to the whole mapfile.
          </para>
        </listitem>
        <listitem>
          <para>
            Layer Name and wms_title metadata:
          </para>
          <para>
            Every individual layer needs its own unique name and title.
              Layer names are also used in GetMap and GetFeatureInfo requests to refer
              to layers that should be included in the map output and in the query.
          </para>
        </listitem>
        <listitem id="projection_srs">
          <para>
            Map PROJECTION and wms_srs metadata:
          </para>
          <para>
            WMS servers have to advertise the projection in which they are able to
              serve data using EPSG projection codes (see 
              <ulink url="http://www.inovagis.org/giserver/tutorial/epsg.htm">
            http://www.inovagis.org/giserver/tutorial/epsg.htm</ulink> for a list of EPSG codes).
              Recent versions of the PROJ4 library come with a table of EPSG 
              initialization codes and allow users to define a projection like this:                    </para>
          <programlisting>
   PROJECTION
      "init=epsg:4269"
   END    
          </programlisting>
          <para>
             (Note that "epsg" has to be in lowercase when used in the PROJ4 'init' directive.) 
            </para>
          <para>
            If the MAP PROJECTION block is provided in the format "init=epsg:xxxx" then
            MapServer will also use this information to generate a &lt;BoundingBox&gt; tag for
            the top-level layer in the WMS capabilities document.  Note that the BoundingBox is an optional
            element of WMS capabilities, but it is good practice to allow MapServer to include it when possible.
          </para>
          <para>
            The above is sufficient for MapServer to recognize the EPSG code and
              include it in SRS tags in the capabilities output (wms_srs metadata is not
              required in this case).  However, it is often impossible to find an 
              EPSG code to match the projection of your data. In those cases, the 
              "wms_srs" metadata is used to list one or more EPSG codes that the data 
              can be served in, and the PROJECTION object contains the real PROJ4 
              definition of the data's projection.
          </para>
          <para>
            Here is an example of a server whose data is in an Lambert Conformal Conic
              projection (for which there is no EPSG code).  It's capabilities output
              will advertize EPSG:4269 and EPSG:4326 projections (lat/lon), but the
              PROJECTION object is set to the real projection that the data is in:
          </para>
          <programlisting>
   NAME DEMO
   ...

   WEB
   ...
   METADATA
      "wms_title"                  "WMS Demo Server"
      "wms_onlineresource"  "http://my.host.com/cgi-bin/mapserv?map=wms.map&amp;"
      "wms_srs"                   "EPSG:4269 EPSG:4326"
   END
   END

   PROJECTION
     "proj=lcc"
     "ellps=GRS80"
     "lat_0=49"
     "lon_0=-95"
     "lat_1=49"
     "lat_2=77"
   END
   ...
          </programlisting>
          <para>
          In addition to EPSG:xxxx projections, a WMS server can advertize projections in the AUTO:xxxx namespace.  AUTO projections 42001 to 42005 are internally supported by MapServer.  However, AUTO projections are useful only with smart WMS clients, since the client needs to define the projection parameters in the WMS requests to the server.  For more information see Annex E of the <ulink url="http://www.opengis.org/docs/01-068r2.pdf">WMS 1.1.1 specification</ulink> and section 6.5.5.2 of the same document.  See also the <link linkend="FAQ">FAQ</link> on AUTO projections at the end of this document. 
            </para>
        </listitem>
        <listitem>
          <para>
            Layer PROJECTION and wms_srs metadata:
          </para>
          <para>
            By default in the WMS context, layers inherit the SRS or their parent layer
              (the map's projection in the MapServer case).  For this reason it is not
              necessary (but still strongly recommended) to provide PROJECTION and wms_srs
              for every layer.
          </para>
          <para>
            However, if your server wants to advertise multiple projections, then at least
              a PROJECTION object is required in every layer, otherwise the layers won't
              be reprojected.  This is just the way on-the-fly reprojection works in 
              MapServer.
          </para>
          <para>
            Layer PROJECTION and wms_srs metadata are defined exactly the same way as
              the map's PROJECTION and wms_srs metadata.
          </para>
          <para>
            For vector layers, if a PROJECTION block is provided in the format "init=epsg:xxxx" then
            MapServer will also use this information to generate a &lt;BoundingBox&gt; tag for
            this layer in the WMS capabilities document.  Note that the BoundingBox is an optional
            element of WMS capabilities, but it is good practice to allow MapServer to include it when possible.
          </para>
        </listitem>
        <listitem id="wms_onlineresource">
          <para>
            The "wms_onlineresource" metadata:
          </para>
          <para>
            The wms_onlineresource metadata is set in the map's web object metadata and
              specifies the URL that should be used to access your server.  This is
              required for the GetCapabilities output. If wms_onlineresource is not 
              provided then MapServer will try to provide a default one using the script
              name and hostname, but you shouldn't count on that too much.  It is strongly
              recommended that you provide the wms_onlineresource metadata.
          </para>
          <para>
            See section 6.2.2 of the <ulink url="http://www.opengis.org/docs/01-068r2.pdf">
            WMS 1.1.1 specification</ulink> for the whole story about
              the online resource URL.  Basically, what you need is a complete HTTP URL
              including the <filename>http://</filename> prefix, hostname, script name, potentially a "map="
              parameter, and and terminated by "?" or "&amp;".
          </para>
          <para>
            Here is a valid online resource URL:
          </para>
          <programlisting>
   http://my.host.com/cgi-bin/mapserv?map=mywms.map&amp;
          </programlisting>
          <para>
            By creating a wrapper script on the server it is possible to hide the 
              "map=" parameter from the URL and then your server's online resource 
              URL could be something like:
          </para>
          <programlisting>
   http://my.host.com/cgi-bin/mywms?
          </programlisting>
          <para>
            This is covered in more detail in the section <link linkend="onlineresourceurl">
            "More About the Online Resource URL"</link> below.
          </para>
        </listitem>
      </itemizedlist>
    </sect2>
    <sect2 id="test">
      <title>Test Your WMS Server</title>
      <sect3 id="val_capabilities">
        <title>Validate the Capabilities Metadata</title>
        <para>
          OK, now that we've got a mapfile, we have to check the XML capabilities 
          returned by our server to make sure nothing is missing.
        </para>
        <para>
          Using a web browser, access your server's online resource URL to which you
          add the parameter "REQUEST=GetCapabilities" to the end, e.g.
        </para>
        <programlisting>
   http://my.host.com/cgi-bin/mapserv?map=mywms.map&amp;REQUEST=GetCapabilities
        </programlisting>
        <para>
          This should return a document of MIME type application/vnd.ogc.wms_xml, so 
          your browser is likely going to prompt you to save the file.  Save it and 
          open it in a text editor (Emacs, Notepad, etc.)
        </para>
        <para>
          If you get an error message in the XML output then take necessary actions.  
          Common problems and solutions are listed in the <link linkend="FAQ">FAQ</link> at the end of this 
          document.
        </para>
        <para>
          If everything went well, you should have a complete XML capabilities document.
          Search it for the word "WARNING"... MapServer inserts XML comments starting
          with "&lt;!--WARNING: " in the XML output if it detects missing mapfile parameters
          or metadata items.  If you notice any warning in your XML output then you have
          to fix all of them before you can register your server with a WMS client, 
          otherwise things are likely not going to work.
        </para>
      </sect3>
      <sect3 id="val_getmap">
        <title>Test With a GetMap Request</title>
        <para>
          OK, now that we know that our server can produce a valid XML GetCapabilities
          response we should test the GetMap request.  MapServer only checks for a few of the required GetMap parameters, 
          so both of the minimum MapServer parameters and a valid GetMap request will be explained below.
                          </para>
        <sect4 id="min_ms">
          <title>Option A: Use Only Parameters Required by MapServer</title>
          <para>
          Simply adding <filename>"VERSION=1.1.1&amp;REQUEST=GetMap&amp;LAYERS=yourlayername1,yourlayername2"</filename> to your server's URL should 
          generate a map with the default map size and all the layers with STATUS ON or
          DEFAULT displayed, e.g.
        </para>
          <programlisting>
   http://my.host.com/cgi-bin/mapserv?map=mywms.map&amp;VERSION=1.1.1&amp;REQUEST=GetMap&amp;LAYERS=parks,province
        </programlisting>
          <para>
          (Note that this works with MapServer's WMS interface even though it is an
          incomplete GetMap request according to the WMS spec.  It lacks several 
          mandatory parameters such as SRS, BBOX, etc.  The next section explains how to create a valid GetMap request.)
        </para>
        </sect4>
        <sect4 id="valid_request">
          <title>Option B: Use a Valid GetMap Request According to the WMS Spec</title>
          <para>The following is a list of the required GetMap parameters according to the WMS spec:</para>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>VERSION=version</emphasis> : Request version
            </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>REQUEST=GetMap</emphasis> : Request name
            </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>LAYERS=layer_list</emphasis> : Comma-separated list of one or more map layers.
            Optional if SLD parameter is present.
            </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>STYLES=style_list</emphasis> : Comma-separated list of one rendering style per
            requested layer. Optional if SLD parameter is present.  NOTE that MapServer does not support
            named styles, so most times you would specify "STYLES=" with an empty value.  MapServer does support STYLES
            when used with an SLD.
            </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>SRS=namespace:identifier</emphasis> : Spatial Reference System.
            </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>BBOX=minx,miny,maxx,maxy</emphasis> : Bounding box corners (lower left, upper right) in
            SRS units.
            </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>WIDTH=output_width</emphasis> : Width in pixels of map picture.
            </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>HEIGHT=output_height</emphasis> : Height in pixels of map picture.
            </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>FORMAT=output_format</emphasis> : Output format of map.
            </para>
            </listitem>
          </itemizedlist>
          <para>An valid example would therefore be:</para>
          <programlisting>
   http://my.host.com/cgi-bin/mapserv?map=mywms.map&amp;VERSION=1.1.1&amp;REQUEST=GetMap&amp;LAYERS=prov_bound&amp;STYLES=&amp;SRS=EPSG:4326&amp;BBOX=
   -173.537,35.8775,-11.9603,83.8009&amp;WIDTH=400&amp;HEIGHT=300&amp;FORMAT=image/png          
          </programlisting>
        </sect4>
      </sect3>
      <sect3 id="val_client">
        <title>Test with a Real Client</title>
        <para>
          If you have access to a WMS client, then register your new server's online
          resource with it and you should be off and running.
        </para>
        <para>
          If you don't have your own WMS client installed already, here are a few pointers: 
        </para>
        <itemizedlist>
          <listitem>
            <para>
             MapServer itself can be used as a WMS client, see the 
             <ulink url="http://mapserver.gis.umn.edu/doc/wms-client-howto.html">WMS Client HOWTO</ulink>.
            </para>
          </listitem>
          <listitem>
            <para>
              MapLab's <ulink url="http://www.maptools.org/maplab/">MapBrowser</ulink> is a web-based WMS client.
            </para>
          </listitem>
          <listitem>
            <para>
              <ulink url="http://www.vividsolutions.com/jump/main.htm">JUMP</ulink> is a desktop GIS package 
              which includes WMS client support.
            </para>
          </listitem>
          <listitem>
            <para>
              <ulink url="http://deegree.sourceforge.net/">Deegree</ulink> provides a WMS client.
            </para>
          </listitem>
          <listitem>
            <para>
              The <ulink url="http://cgdi-dev.geoconnections.org/prototypes/owsview/index.html">owsview</ulink> Viewer Client Generator is an online              application that allows users to add WMS and WFS layers by validating WMS and WFS Capabilities XML.</para>
          </listitem>
        </itemizedlist>
        <para>
        This list is not exhaustive, there are several Open Source or proprietary packages that 
        offer WMS support and could be used to interact with your new MapServer WMS server instance. 
        </para>
      </sect3>
    </sect2>
    <sect2 id="onlineresourceurl">
      <title>More About the Online Resource URL</title>
      <para>
        As mentioned in the section <link linkend="wms_onlineresource">
        "Setup a Mapfile / wms_onlineresource metadata"</link> above, the following Online Resource URL is
          perfectly valid for a MapServer WMS according to section 6.2.2 or the WMS 1.1.1 specification:
      </para>
      <programlisting>
   http://my.host.com/cgi-bin/mapserv?map=mywms.map&amp;
      </programlisting>
      <para>
        However, some people will argue that the above URL contains mandatory 
        vendor-specific parameters and that this is illegal.  First we would like
        to point that "map=..." is not considered a vendor-specific parameter in this
        case since it is part of the Online Resource URL which is defined as an 
        opaque string terminated by "?" or "&amp;" 
        (See <ulink url="http://www.opengis.org/docs/01-068r2.pdf">
        WMS 1.1.1 section 6.2.2</ulink>).
      </para>
      <para>
        But anyway, even if it's valid, the above URL is still ugly.  And you might 
        want to use a nicer URL for your WMS Online Resource URL.  Here are some 
        suggestions:
      </para>
      <orderedlist>
        <listitem>
          <para>
            On Unix servers, you can setup a wrapper
            shell script that sets the MS_MAPFILE environment variable and then
            passes control to the mapserv executable... that results on a cleaner
            OnlineResource URL:
          </para>
          <programlisting>
   #! /bin/sh
   MS_MAPFILE=/path/to/demo.map
   export MS_MAPFILE
   /path/to/mapserv           
          </programlisting>
        </listitem>
        <listitem>
          <para>
            Another option is to use the "setenvif" feature of Apache: use symbolic links that all
            point to a same mapserv binary, and then for each symbolic link test the url, and set the
            MAP environment accordingly.
          </para>
          <para>
            For Windows and Apache users the steps are as follows <emphasis>(this requires Apache
               1.3 or newer)</emphasis>:
          </para>
          <itemizedlist>
            <listitem>
              <para>
                Copy <filename>mapserv.exe</filename> to a new name for your WMS, such as
                "mywms.exe".
              </para>
            </listitem>
            <listitem>
              <para>
                In <filename>httpd.conf</filename>, add:
              </para>
              <programlisting>
   SetEnvIf Request_URI "/cgi-bin/mywms" MS_MAPFILE=/path/to/mymap.map
              </programlisting>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            On IIS servers (Windows), you can use the following ASP script:
          </para>
          <programlisting>
  &lt;%
    Server.ScriptTimeout = 360
    strRequest = Request.ServerVariables("QUERY_STRING")
    strURL = "http://myserver/cgi-bin/mapserv.exe?map=C:\Inetpub\wwwroot\WMS\mymap.map&amp;" &amp; strRequest
    Dim objHTTP
    Set objHTTP = Server.CreateObject("MSXML2.ServerXMLHTTP")
    objHTTP.open "GET", strURL, false
    objHTTP.send ""
    Response.ContentType = objHTTP.getResponseHeader("content-type")
    Response.BinaryWrite objHTTP.responseBody
    Set objHTTP = Nothing
  %&gt;
          </programlisting>
        </listitem>
      </orderedlist>
    </sect2>
  </sect1>   
  <sect1 id="reference">
    <title>Reference Section</title>    
    <sect2 id="metadata">
      <title>Metadata</title>
      <para>
        The following metadata are available in the setup of the mapfile:
      </para>
      <sect3 id="web">
        <title>Web Object</title>
        <sect4 id="abstract">
          <title>wms_abstract</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> Abstract (WMS1.1.1, sect. 7.1.4.2)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Optional) A blurb of text providing more information about
                    the WMS server.
              </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="accesscontraints">
          <title>wms_accesscontraints</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> AccessConstraints (WMS1.1.1, sect. 7.1.4.2)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis>(Optional) Access constraints information.  Use the 
                    reserved word "none" if there are no access constraints.
              </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="contactaddress">
          <title>wms_addresstype, wms_address, wms_city, wms_stateorprovince, wms_postcode, wms_country           </title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> ContactAddress and family (WMS1.1.1, sect. 7.1.4.2)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> Optional contact address information.  If provided then 
                    all six  metadata items are required.                               </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="contactelectronicmailaddress">
          <title>wms_contactelectronicmailaddress</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> ContactElectronicMailAddress (WMS1.1.1, sect. 7.1.4.2)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> Optional contact Email address.                     </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="contactfacsimiletelephone">
          <title>wms_contactfacsimiletelephone</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> ContactFacsimileTelephone (WMS1.1.1, sect. 7.1.4.2)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> Optional contact facsimile telephone number.                  </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="contactinformation">
          <title>wms_contactperson, wms_contactorganization, wms_contactposition</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> ContactInformation, ContactPerson,                     ContactOrganization, ContactPosition (WMS1.1.1, sect. 7.1.4.2)
              </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> Optional contact information.  If provided then all three
                    metadata items are required.                                    </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="contactvoicetelephone">
          <title>wms_contactvoicetelephone</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> ContactVoiceTelephone (WMS1.1.1, sect. 7.1.4.2)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> Optional contact voice telephone number.                    </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="encoding">
          <title>wms_encoding</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> Encoding
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> Optional XML capabilities encoding type.  The default is 
                ISO-8859-1.
              </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="mime_type">
          <title>wms_feature_info_mime_type</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> Feature_info_mime_type
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis>
                <itemizedlist>
                  <listitem>
                    <para>
                      If not specified, then MapServer CAN process "text/html" MIME type if
                      the GetFeatureInfo parameter INFO_FORMAT is set. In this case, the layer 
                      template is returned.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If set to "NONE", then MapServer will not process MIME type
                      other than the default MIME type.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If set to something (except "NONE"), then MapServer will use the
                      specified MIME type (whatever it is) if the GetFeatureInfo parameter INFO_FORMAT is set as well.                      In this case, the layer template is returned.
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="fees">
          <title>wms_fees</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> Fees (WMS1.1.1, sect. 7.1.4.2)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Optional) Fees information.  Use the reserved word "none"
                    if there are no fees.                                         </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="group">
          <title>wms_group_title</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> Group_title (WMS1.1.1, sect. 7.1.4.1)
                        </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Optional) A human-readable name for the group that this layer belongs                                      to.  Only one layer for the group needs to contain <filename>                                       wms_group_title</filename>, MapServer will find and use the value.
                        </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="keywordlist">
          <title>wms_keywordlist</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> KeywordList (WMS1.1.1, sect. 7.1.4.2)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Optional) A comma-separated list of keywords or keyword
                    phrases to help catalog searching.  As of WMS 1.1.0 no controlled
                    vocabulary has been defined.                                    </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="OnlineResource">
          <title>wms_onlineresource</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> OnlineResource (WMS1.1.1, sect. 6.2.2)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Recommended) The URL that will be used to access this 
                    WMS server.  This value is used in the GetCapabilities response.  
              </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>See Also:</emphasis> Sections <link linkend="wms_onlineresource">
                "Setup a Mapfile / wms_onlineresource metadata"</link> and 
                <link linkend="onlineresourceurl">More About the Online Resource URL</link> above.                  </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="resxy">
          <title>wms_resx, wms_resy</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> BoundingBox (WMS1.1.1, sect. 6.5.6)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Optional) Used in the BoundingBox tag to provide info 
                    about spatial resolution of the data, values are in map projection 
                    units.                          
              </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="srs">
          <title>wms_srs</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> SRS (WMS1.1.1, sect. 6.5.5)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Recommended) Contains a list of EPSG projection codes 
                    that should be advertized as being available for all layers in this 
                    server.  The value can contain one or more EPSG:&lt;code&gt; pairs separated
                    by spaces (e.g. "EPSG:4269 EPSG:4326") This value should be upper case (EPSG:42304.....not epsg:42304) to avoid problems with case sensitive      platforms.</para>
            </listitem>
            <listitem>
              <para>
                <emphasis>See Also:</emphasis> Section <link linkend="projection_srs">
                "Setup a Mapfile / Map PROJECTION and wms_srs metadata"</link> above.
              </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="timeformat">
          <title>wms_timeformat</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> The time format to be used when a request is sent.  (e.g. "wms_timeformat" "%Y-%m-%d  %H, %Y-%m-%d  %H:%M"). 
                Please see the <ulink url="http://mapserver.gis.umn.edu/doc/wms-time-support-howto.html">WMS Time Support howto</ulink> for more information.</para>
            </listitem>
          </itemizedlist>
        </sect4>        
        <sect4 id="title">
          <title>wms_title</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> Title (WMS1.1.1, sect. 7.1.4.1)
              </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Required) A human-readable name for this Layer.
                </para>
            </listitem>
          </itemizedlist>
        </sect4>
      </sect3>
      <sect3 id="layer">
        <title>Layer Object</title>
        <sect4 id="lay_abstract">
          <title>wms_abstract</title>
          <itemizedlist>
            <listitem>
              <para>
                Same as <link linkend="abstract">wms_abstract</link> in the Web Object .
              </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="time_default">
          <title>wms_default</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Optional for Time Support) This value is used if it is defined and the Time value is missing in the request.
                Please see the <ulink url="http://mapserver.gis.umn.edu/doc/wms-time-support-howto.html">WMS Time Support howto</ulink> for more information.</para>
            </listitem>
          </itemizedlist>
        </sect4>         
        <sect4 id="extent">
          <title>wms_extent</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> BoundingBox (WMS1.1.1, sect. 6.5.6)
                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Optional) Used for the layer's BoundingBox tag for cases
                    where it is impossible (or very inefficient) for MapServer to probe the
                    data source to figure its extents.  The value for this metadata is 
                    "minx miny maxx maxy" separated by spaces, with the values in the 
                    layer's projection units.  If <filename>wms_extent</filename> is provided then it has 
                    priority and MapServer will NOT try to read the source file's extents.</para>
              <para>
                  For Rasters served through WMS, MapServer can now use the <filename>wms_extent</filename> metadata parameter to register the image.
        If a <filename>.wld</filename> file cannot be found, MapServer will then look for the <filename>wms_extent</filename>
        metadata parameter and use the extents of the image and the size of the image for georegistration.
      </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="lay_keywordlist">
          <title>wms_keywordlist</title>
          <itemizedlist>
            <listitem>
              <para>
                Same as <link linkend="keywordlist">wms_keywordlist</link> in the Web Object .
              </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="lay_opaque">
          <title>wms_opaque</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>WMS TAG Name:</emphasis> Layer (WMS1.1.1, sect. 7.1.4.6.3)
                                </para>
            </listitem>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Optional) Set this metadata to "1" to indicate that the
                            layer represents an area-filling coverage of space (e.g. a bathymetry and elevation layer). 
                            This should be taken by the client as a hint that this layer should be
                            placed at the bottom of the stack of layers.
                          </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="lay_srs">
          <title>wms_srs</title>
          <itemizedlist>
            <listitem>
              <para>
                Same as <link linkend="srs">wms_srs</link> in the Web Object .
              </para>
            </listitem>
          </itemizedlist>
        </sect4>
        <sect4 id="time_extent">
          <title>wms_timeextent</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Mandatory for Time Support) This is used in the capabilities to return the valid time values for the layer. The value defined here should be a valid time range.
                Please see the <ulink url="http://mapserver.gis.umn.edu/doc/wms-time-support-howto.html">WMS Time Support howto</ulink> for more information.</para>
            </listitem>
          </itemizedlist>
        </sect4> 
        <sect4 id="time_item">
          <title>wms_timeitem</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis>Description:</emphasis> (Mandatory for Time Support) This is the name of the field in the DB that contains the time values.
                Please see the <ulink url="http://mapserver.gis.umn.edu/doc/wms-time-support-howto.html">WMS Time Support howto</ulink> for more information.</para>
            </listitem>
          </itemizedlist>
        </sect4>         
        <sect4 id="lay_title">
          <title>wms_title</title>
          <itemizedlist>
            <listitem>
              <para>
                Same as <link linkend="title">wms_title</link> in the Web Object .
              </para>
            </listitem>
          </itemizedlist>
        </sect4>
      </sect3>
    </sect2>
  </sect1>
  <sect1 id="FAQ">
    <title>FAQ / Common Problems</title>
    <sect2>
      <title/>
      <qandaset defaultlabel="qanda">
        <qandaentry>
          <question>
            <para>
              How can I find the EPSG code for my data's projection?
            </para>
          </question>
          <answer>
            <para>
              If you know the parameters of your data's projection, then you 
                can browse the "epsg" file that comes with PROJ4 and look for a
                projection definition that matches your data's projection.  It's a
                simple text file and the EPSG code is inside brackets (&lt;...&gt;) at 
                the beginning of every line.
            </para>
            <para>
              The "epsg" file is usually located in <filename>/usr/local/share/proj/</filename> on Unix
                systems and in <filename>C:\PROJ\</filename> or <filename>C:\PROJ\NAD</filename> in                   Windows systems (depending on the installation).
            </para>
          </answer>
        </qandaentry>
        <qandaentry>
          <question>
            <para>
              My WMS server produces the error "msProcessProjection(): no system
                list, errno: .."
            </para>
          </question>
          <answer>
            <para>
              That's likely PROJ4 complaining that it cannot find the "epsg" 
                projection definition file.  Make sure you have installed PROJ 4.4.3
                or more recent and that the "epsg" file is installed at the right
                location.  On Unix it should be under <filename>/usr/local/share/proj/</filename>, and 
                on Windows PROJ looks for it under <filename>C:\PROJ\</filename> or 
                       <filename>C:\PROJ\NAD</filename> (depending on the installation).
            </para>
            <para>
              If you don't have the "epsg" file then you can get it as part of the
                PROJ4 distribution at <ulink url="http://www.remotesensing.org/proj/">
              http://www.remotesensing.org/proj/</ulink> or you can 
                download it at <ulink url="http://www.maptools.org/dl/proj4-epsg.zip">
              http://www.maptools.org/dl/proj4-epsg.zip</ulink>.
            </para>
          </answer>
        </qandaentry>
        <qandaentry>
          <question>
            <para>
              How do AUTO projections work?
            </para>
          </question>
          <answer>
            <para>
        When a WMS client calls a WMS server with an auto projection, it has to specify the SRS in the form:  <command>AUTO:</command>
              <varname>proj_id</varname>,<varname>unit_id</varname>,<varname>lon0</varname>,<varname>lat0</varname>  where:
        </para>
            <itemizedlist>
              <listitem>
                <para>
                  <varname>proj_id</varname> is one of <command>42001</command>, <command>42002</command>, <command>42003</command>, <command>42004</command>, or <command>42005</command> (only five auto projections are currently defined).
                </para>
              </listitem>
              <listitem>
                <para>
                  <varname>unit_id</varname> is always <command>9001</command> for meters. (It is uncertain whether anyone supports any other units.) 
                </para>
              </listitem>
              <listitem>
                <para>
                  <varname>lon0</varname> and <varname>lat0</varname> are the coordinates to use as the origin for the projection. 
                </para>
              </listitem>
            </itemizedlist>
            <para>
        When using an AUTO projection in WMS GetCapabilities, you include only the <command>&quot;AUTO:42003&quot;</command> string in your <varname>wms_srs</varname> metadata, you do not include the projection parameters. Those are added by the application (client) at runtime depending on the map view. For example: 
              </para>
            <programlisting> 
  NAME DEMO 
  ... 

  WEB 
  ... 
  METADATA 
     &quot;wms_title&quot;            &quot;WMS Demo Server&quot; 
     &quot;wms_onlineresource&quot;   &quot;http://my.host.com/cgi-bin/mapserv?map=wms.map&amp;&quot; 
     &quot;wms_srs&quot;              &quot;AUTO:42001 AUTO:42002&quot; 
  END 
  END    
              </programlisting>
            <para>  
       advertises the first two auto projections.
       </para>
          </answer>
        </qandaentry>
      </qandaset>
    </sect2>
  </sect1>
  <!-- Section1: Document Info -->
  <sect1 id="docinfo">
    <title>About This Document</title>
        <sect2 id="rhistory">
            <title>Revision History</title>
            <para>  
  The document revision history starts with UMN MapServer 4.2 although the
  document is older. The numbering is in parallel with the revision control
  system. Missing numbers indicate minor maintenance revision updates.
</para>
            <para>
                <revhistory>
                    <revision>
                        <revnumber>Number: 1.32</revnumber>
                        <date>Date: 2004-11-02</date>
                        <authorinitials>Author: Jeff McKenna</authorinitials>
                        <revremark>Added OGC workshop link
                                   </revremark>
                    </revision>                
                    <revision>
                        <revnumber>Number: 1.30</revnumber>
                        <date>Date: 2004-10-27</date>
                        <authorinitials>Author: Jeff McKenna</authorinitials>
                        <revremark>Added time support metadata
                                   </revremark>
                    </revision>
                </revhistory>            
                <revhistory>
                    <revision>
                        <revnumber>Number: 1.29</revnumber>
                        <date>Date: 2004-05-04</date>
                        <authorinitials>Author: Jeff McKenna</authorinitials>
                        <revremark>Added owsview for testing your WMS server
                                   </revremark>
                    </revision>
                </revhistory>
            </para>
        </sect2>    
    <sect2 id="copyright">
      <title>Copyright Information</title>
      <para>
                Copyright (c) 2004, Jeff McKenna, DM Solutions Group Inc.
      </para>
      <para>
                This documentation is covered by the same Open Source license as the
                MapServer software itself.  See MapServer's 
                <ulink url="http://mapserver.gis.umn.edu/license.html">License and 
                Credits</ulink> page for the complete text.
            </para>
    </sect2>
    <sect2 id="disclaimer">
      <title>Disclaimer</title>
      <para>
            No liability for the contents of this document can be accepted.
            Use the concepts, examples and other content at your own risk.
            As this is a new edition of this document, there may be errors
            and inaccuracies that may be damaging to your system.
            Although this is highly unlikely, the author(s) do not take any 
            responsibility for that:  proceed with caution.
                  </para>
    </sect2>
    <!-- Section2: feedback -->
    <sect2 id="feedback">
      <title>Feedback</title>
      <para>
            Input is appreciated.  Send any
            comments or suggestions to the MapServer Documentation Coordinator at
            <email>mdp@lists.gis.umn.edu</email>.
        </para>
    </sect2>
  </sect1>
</article>
