.. _mapcache:

*****************************************************************************
MapCache
*****************************************************************************

:Author: Thomas Bonfort
:Contact: tbonfort at terriscope.fr

MapCache is an apache module that implements a tile caching solution to speed up
access to WMS layers. The primary objectives are to be fast and easily deployable,
while offering the essential features (and more!) expected from a tile caching
solution.


.. toctree::
   :maxdepth: 1

   mapcache_install
   mapcache_config
   mapcache_seed
   mapcache_caches

Features
-----------------------------------------------------------------------------

* services WMS, WMTS, TMS, VirtualEarth/Bing and [ServicingGmaps Gmaps] requests
* ability to respond to untiled WMS requests by merging tiles from the cache or
  forwarding them to the wms source
* responds to WMS/WMTS GetFeatureInfo requests (forwarded to source service)
* KML superoverlay generation
* data provided by WMS backends (GDAL supported sources planned)
* cache types:
  
  * disk:
    
    * by default the same cache structure as TileCache and MapProxy
    * template based, e.g. /path/to/{tileset}/{z}/{x}/{y}.{ext}
  * sqlite:
    
    * custom sqlite schema
    * mbtiles
    * custom sqlite queries (provide your own)
  * memcached
* configurable metatiling
* on-the-fly tile merging for combining multiple tiles into a single image
* image post-processing (recompression and quantization) when arriving from a backend
* interprets and produces cache control headers: Last-Modified, If-Modified-Since, Expires
* multithreaded seeding utility, that can seed specific zoom levels or specific areas ( e.g.: seed
  levels 0 to 12 of all tiles intersecting Colorado )
* ability to add a custom watermark on stored tiles
* produces a CGI/fastCGI executable for using with other webservers than apache
* configurable symbolic linking of blank tiles to gain disk storage
* configurable error reporting: plain http error code, textual message, or empty (blank) image
* ability to specify vendor params or dimensions to be forwarded to the WMS backend
  (and build a cache that takes these parameters into account)

