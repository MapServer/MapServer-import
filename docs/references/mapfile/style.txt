*****************************************************************************
 STYLE
*****************************************************************************

This object is new in 4.0 and is intended to seperate logic from looks. The final intent is to have named styles (Not yet supported) that will be re-usable through the mapfile. This is the new, preferred way of defining the appearance of an object, notably a class.

-----------

ANGLE [double|attribute]
    - Angle, given in degrees, to draw the line work. Default is 0. For symbols
      of Type HATCH, this is the angle of the hatched lines. For its use with
      hatched lines, see Example#8 in the `SYMBOL examples`_.
    - [*Attribute*] was introduced in version 5.0, to specify the item name in
      the attribute table to use for angle values.  The hard brackets [] are
      required.  For example, if your shapefile's DBF has a field named "MYANGLE"
      that holds angle values for each record, your STYLE object for
      hatched lines might contain:

      ::

        STYLE
          SYMBOL 'hatch-test'    
          COLOR 255 0 0     
          ANGLE [MYANGLE]
          SIZE 4
          WIDTH 3      
        END 

      The associated RFC document for this feature is `RFC 19`_.

.. _`RFC 19`: /development/rfc/ms-rfc-19/
.. _`SYMBOL examples`: /docs/reference/symbology/examples

ANGLEITEM [string]
    - this parameter was removed in MapServer 5.0.  You should use 
      the ANGLE [*attribute*] parameter instead.
    - For MapServer versions <5, this is the attribute/field that stores the
      angle to be used in rendering. Angle is given in degrees with 0 meaning no
      rotation.

ANTIALIAS [true|false]
    Should TrueType fonts and Cartoline symbols be antialiased.

BACKGROUNDCOLOR [r] [g] [b]
    Color to use for non-transparent symbols.

COLOR [r] [g] [b] | [attribute]
    - Color to use for drawing features.
    - [*Attribute*] was introduced in version 5.0, to specify the item name in
      the attribute table to use for color values.  The hard brackets [] are
      required.  For example, if your shapefile's DBF has a field named "MYCOLOR"
      that holds color values for each record, your STYLE object for might
      contain:

      ::

        STYLE    
          COLOR [MYCOLOR]    
          OUTLINECOLOR 150 150 150      
        END 

      The associated RFC document for this feature is `RFC 19`_.

MAXSIZE [integer]
    Maximum size in pixels to draw a symbol. Default is 50.

MINSIZE [integer]
    Minimum size in pixels to draw a symbol. Default is 0.

MINWIDTH [integer]
    Minimum width in pixels to draw the line work.

OFFSET [x][y]
    Offset values for shadows, hollow symbols, etc ...
  
OUTLINECOLOR [r] [g] [b] | [attribute]
    - Color to use for outlining polygons and certain marker symbols. Line 
      symbols do not support outline colors.
    - [*Attribute*] was introduced in version 5.0, to specify the item name in
      the attribute table to use for color values.  The hard brackets [] are
      required.  For example, if your shapefile's DBF has a field named
      "MYOUTCOLOR" that holds color values for each record, your STYLE object
      for might contain:

      ::

        STYLE    
          COLOR 255 0 0    
          OUTLINECOLOR [MYOUTCOLOR]      
        END 

      The associated RFC document for this feature is `RFC 19`_.

SIZE [integer|attribute]
    - Height, in pixels, of the symbol/pattern to be used. Only useful with 
      scalable symbols. Default is 1. For symbols of Type HATCH, the SIZE is the
      distance between hatched lines. For its use with hatched lines, see
      Example#8 in the `SYMBOL examples`_.
    - [*Attribute*] was introduced in version 5.0, to specify the item name in
      the attribute table to use for size values.  The hard brackets [] are
      required.  For example, if your shapefile's DBF has a field named "MYSIZE"
      that holds size values for each record, your STYLE object for
      hatched lines might contain:

      ::

        STYLE
          SYMBOL 'hatch-test'    
          COLOR 255 0 0     
          ANGLE 45
          SIZE [MYSIZE]
          WIDTH 3      
        END 

      The associated RFC document for this feature is `RFC 19`_.

SIZEITEM [string]
    - this parameter was removed in MapServer 5.0.  You should
      use the SIZE [*attribute*] parameter instead. 
    - For MapServer versions <5, this is the attribute/field that stores the
      size to be used in rendering. Value is given in pixels.

SYMBOL [integer|string|filename]
    The symbol name or number to use for all features if attribute tables are 
    not used. The number is the index of the symbol in the symbol file, 
    starting at 1, the 5th symbol in the file is therefore symbol number 5. 
    You can also give your symbols names using the NAME keyword in the symbol 
    definition file, and use those to refer to them. Default is 0, which 
    results in a single pixel, single width line, or solid polygon fill, 
    depending on layer type.

    You can also specify a gif or png filename. The path is relative to the 
    location of the mapfile. 

WIDTH [integer]
    Width refers to the thickness of line work drawn, in pixels. Default is 1. For symbols of Type HATCH, the WIDTH is how thick the hatched lines are. For its use with hatched lines, see Example#8 in the `SYMBOL examples`_.
