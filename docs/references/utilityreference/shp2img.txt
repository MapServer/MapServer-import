:Purpose: 
   Creates a map image from a mapfile. Output is either PNG or GIF depending 
   on what version of the GD library used.  This is a useful utility to test your 
   mapfile. You can simply provide the path to your mapfile and the name of an output 
   image, and an image should be returned. If an image cannot be created an error will 
   be displayed at the command line that should refer to a line number in the mapfile.
   
:Syntax: 
   ::

      shp2img -m mapfile [-o image] [-e minx miny maxx maxy] [-s sizex sizey]
               [-l layer1 "[layers2...] ]" [-i format] [-p n]
               [-all_debug n] [-map_debug n] [-layer_debug n]
        -m mapfile: Map file to operate on - required.
        -i format: Override the IMAGETYPE value to pick output format.
        -o image: output filename (stdout if not provided)
        -e minx miny maxx maxy: extents to render
         -s sizex sizey: output image size
        -l layers: layers to enable - make sure they are quoted and space seperated if
               more than one listed.
        -all_debug n: Set debug level for map and all layers.
        -map_debug n: Set map debug level.
        -layer_debug layer_name n: Set layer debug level.
        -c n: draw map n number of times.
        -p n: pause for n seconds after reading the map
     
----

:Example#1:
   ::
    
     shp2img -m vector_blank.map -o test.png

:Result:
  A file named ‘test.png’ is created, that you can drag into your browser to view.  

----

:Example#2:
   ::
    
     shp2img -m gmap75.map -o test2.png -map_debug 3

:Result:
  A file named ‘test2.png’ is created, and layer draw speeds are returned such as:
  ::

     msDrawMap(): Layer 0 (bathymetry), 0.047s
     msDrawMap(): Layer 1 (land_fn), 0.016s
     msDrawMap(): Layer 3 (drain_fn), 0.016s
     msDrawMap(): Layer 4 (drainage), 0.031s
     msDrawMap(): Layer 5 (prov_bound), 0.031s
     msDrawMap(): Layer 6 (fedlimit), 0.000s
     msDrawMap(): Layer 9 (popplace), 0.016s
     msDrawMap(): Drawing Label Cache, 0.140s
     msDrawMap() total time: 0.297s

