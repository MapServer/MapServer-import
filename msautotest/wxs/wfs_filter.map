#
# Test WFS
#
# REQUIRES: INPUT=GDAL OUTPUT=PNG SUPPORTS=WFS GEOS
#
#
#
# Verify PropertyIsEqualTo
# RUN_PARMS: wfs_filter_property_is_equal.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
#
# Verify PropertyIsNotEqualTo
# RUN_PARMS: wfs_filter_is_not_equal.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsNotEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsNotEqualTo></Filter>" > [RESULT]
#
# Verify PropertyIsLessThan
# RUN_PARMS: wfs_filter_isless_than.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsLessThan><PropertyName>POP_RANGE</PropertyName><Literal>3</Literal></PropertyIsLessThan></Filter>" > [RESULT]
#
# Verify PropertyIsGreaterThan
# RUN_PARMS: wfs_filter_isgreater_than.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsGreaterThan><PropertyName>POP_RANGE</PropertyName><Literal>3</Literal></PropertyIsGreaterThan></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsLessThanOrEqualTo
# RUN_PARMS: wfs_filter_isless_than_or_equalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsLessThanOrEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>2</Literal></PropertyIsLessThanOrEqualTo></Filter>" > [RESULT]
#
# Verify PropertyIsGreaterThanOrEqualTo
# RUN_PARMS: wfs_filter_greater_than_or_equalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsGreaterThanOrEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsGreaterThanOrEqualTo></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsBetween
# RUN_PARMS: wfs_filter_isbetween.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsBetween><PropertyName>POP_RANGE</PropertyName><LowerBoundary>4</LowerBoundary><UpperBoundary>6</UpperBoundary></PropertyIsBetween></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsLike
# RUN_PARMS: wfs_filter_islike.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsLike+wildCard='*'+singleChar='.'+escape='!'><PropertyName>NAME</PropertyName><Literal>Syd*</Literal></PropertyIsLike></Filter>" > [RESULT]
#
# Verify PropertyIsBetween OR PropertyIsEqualTo
# RUN_PARMS: wfs_filter_isbetween_or_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><OR><PropertyIsBetween><PropertyName>POP_RANGE</PropertyName><LowerBoundary>4</LowerBoundary><UpperBoundary>6</UpperBoundary></PropertyIsBetween><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT]
#
# Verify PropertyIsBetween AND PropertyIsEqualTo
# RUN_PARMS: wfs_filter_isbetween_and_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><AND><PropertyIsBetween><PropertyName>POP_RANGE</PropertyName><LowerBoundary>1</LowerBoundary><UpperBoundary>3</UpperBoundary></PropertyIsBetween><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsEqualTo></AND></Filter>" > [RESULT]
#
# Verify PropertyIsBetween AND NOT PropertyIsEqualTo
# RUN_PARMS: wfs_filter_isbetween_and_not_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><AND><PropertyIsBetween><PropertyName>POP_RANGE</PropertyName><LowerBoundary>4</LowerBoundary><UpperBoundary>6</UpperBoundary></PropertyIsBetween><NOT><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Sydney</Literal></PropertyIsEqualTo></NOT></AND></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsEqualTo OR PropertyIsEqualTo
# RUN_PARMS: wfs_filter_isequalto_or_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><OR><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>5</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsEqualTo OR PropertyIsEqualTo reverse
# RUN_PARMS: wfs_filter_isequalto_or_isequalto_reverse.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><OR><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>5</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsEqualTo AND PropertyIsEqualTo
# RUN_PARMS: wfs_filter_isequalto_and_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><And><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>5</Literal></PropertyIsEqualTo></And></Filter>" > [RESULT]
#
# Verify PropertyIsEqualTo AND PropertyIsEqualTo reverse order
# RUN_PARMS: wfs_filter_isequalto_and_isequalto_reverse.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><And><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>5</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsEqualTo></And></Filter>" > [RESULT]
#
# Verify Not PropertyIsEqualTo
# RUN_PARMS: wfs_filter_not_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><Not><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsEqualTo></Not></Filter>" > [RESULT]
#
# Verify BBOX Result:  Digby
# RUN_PARMS: wfs_filter_bbox.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><BBOX><PropertyName>POINT</PropertyName><Box+srsName=%22EPSG:42304%22><coordinates>2279398,39858+2279400,39859</coordinates></Box></BBOX></Filter>" > [RESULT]
#
# Verify INTERSECTS Results:  Canso, Port Hawkesbury
# RUN_PARMS: wfs_filter_intersects.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><Intersect><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>2488789,289552 2588789,289552 2588789,389552 2488789,389552 2488789,289552</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Intersect></Filter>" > [RESULT]
#
# Verify DWITHIN Result:  Sydney
# RUN_PARMS: wfs_filter_dwithin.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><DWithin><PropertyName>Geometry</PropertyName><gml:Point><gml:coordinates>2587598.000000,404010.531250</gml:coordinates></gml:Point><Distance units='m'>1000</Distance></DWithin></Filter>" > [RESULT]
#

# Verify BEYOND Results:  all but Sydney excluded
# RUN_PARMS: wfs_filter_beyond.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><Beyond><PropertyName>Geometry</PropertyName><gml:Point><gml:coordinates>2587598.000000,404010.531250</gml:coordinates></gml:Point><Distance units='m'>1000</Distance></Beyond></Filter>" > [RESULT]
#
# Verify EQUALS Result:  Cheticamp
# RUN_PARMS: wfs_filter_equals.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><Equals><PropertyName>Geometry</PropertyName><gml:Point><gml:coordinates>2503805.5,427872.65625</gml:coordinates></gml:Point></Equals></Filter>" > [RESULT]
#
# Verify OVERLAPS Result:  Prince Edward Island
# RUN_PARMS: wfs_filter_overlaps.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Overlaps><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>2229029.24,261981.27 2363767.62,261981.27 2363767.62,360789.41 2229029.24,360789.41</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Overlaps></Filter>" > [RESULT]


# Verify WITHIN Results:  Quebec, Iles de la Madeleine (3 islands)
# RUN_PARMS: wfs_filter_within.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Within><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>2364765.68,430653.76 2450599.02,430653.76 2450599.02,505508.41 2364765.68,505508.41</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Within></Filter>" > [RESULT]

# Verify CONTAINS Result:  Quebec, Iles de la Madeleine
# RUN_PARMS: wfs_filter_contains.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Contains><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>2398347.49,454364.78 2403150.67,454364.78 2403150.67,458544.16 2398347.49,458544.16</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Contains></Filter>" > [RESULT]

# Verify CROSSES Result:  Nova Scotia, Sable Island
# RUN_PARMS: wfs_filter_crosses.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Crosses><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>2708973,187500 2734673,187500 2734673,212889 2708973,212889</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Crosses></Filter>" > [RESULT]

# Verify TOUCHES Result:  Quebec, Iles de la Madeleine (AREA:  4833029.500)
# RUN_PARMS: wfs_filter_touches.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Touches><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>2422047.0,455420.09375 2422043.0,453541.125 2422921.67,453530.47 2422921.67,455417.43</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Touches></Filter>" > [RESULT]

# Verify EQUALS Result:  Quebec, Iles de la Madeleine (AREA:  4833029.500)
# RUN_PARMS: wfs_filter_equals_poly.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Equals><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>2420754.0,453227.25 2419658.5,454812.9375 2420654.0,456235.25 2422047.0,455420.09375 2422043.0,453541.125 2420754.0,453227.25</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Equals></Filter>" > [RESULT]

# Verify DISJOINT Result:  Nova Scotia, Sable Island
# RUN_PARMS: wfs_filter_disjoint.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Disjoint><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>2157168.77,-120775.54 2692130.04,-120775.54 2692130.04,565891.17 2157168.77,565891.17</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Disjoint></Filter>" > [RESULT]

# Verify INTERSECTS Results:  Prince Edward Island
# RUN_PARMS: wfs_filter_intersects_line.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Intersect><PropertyName>Geometry</PropertyName><gml:LineString><gml:coordinates>2338382.77,339580.61 2366578.03,262230.79</gml:coordinates></gml:LineString></Intersect></Filter>" > [RESULT]
#

NAME WFS_FILTER
STATUS ON
SIZE 400 300
EXTENT   2018000 -73300 3410396 647400
UNITS METERS
IMAGECOLOR 255 255 255
SHAPEPATH ./data
SYMBOLSET etc/symbols.sym
FONTSET etc/fonts.txt


OUTPUTFORMAT
  NAME GDPNG
  DRIVER "GD/PNG"
  MIMETYPE "image/png"
  IMAGEMODE RGB
  EXTENSION "png"
END


#
# Start of web interface definition
#
WEB

 IMAGEPATH "/tmp/ms_tmp/"
 IMAGEURL "/ms_tmp/"

  METADATA
    "wfs_title"		   "Test simple wfs"
    "wfs_onlineresource"   "http://localhost/path/to/wfs_simple?"
    "wfs_srs"		   "EPSG:4269 EPSG:4326"
    "ows_schemas_location" "http://ogc.dmsolutions.ca"
  END
END

PROJECTION
  "init=./data/epsg2:42304"
END


#
# Start of layer definitions
#



LAYER
  NAME province
  DATA province
  METADATA
    "wfs_title"         "province"
    "wfs_description"   "province"
    "wfs_result_fields" "NAME_E YEAR_EST AREA_KMSQ"
    "gml_include_items" "all"
  END
  TYPE POINT
  STATUS ON
  PROJECTION
    "init=./data/epsg2:42304"
  END

  DUMP TRUE
  CLASSITEM "Name_e"

  CLASS
    NAME "Province"
    COLOR 200 255 0
    OUTLINECOLOR 120 120 120
  END
END # Layer

LAYER
  NAME park
  DATA park
  METADATA
    "wfs_title"             "park"
    "wfs_version"           "1.0.0"
    "wfs_description"	    "Parks"
    "wfs_result_fields"     "NAME_E YEAR_EST AREA_KMSQ"
    "gml_include_items" "all"
   END
  TYPE POLYGON
  STATUS ON
  PROJECTION
    "init=./data/epsg2:42304"
  END

  DUMP TRUE
  CLASS
    NAME "Parks"
    COLOR 200 255 0
    OUTLINECOLOR 120 120 120
  END
END # Layer



LAYER
  NAME popplace
  DATA popplace
  METADATA
    "wfs_title"         "popplace"
    "wfs_description"   "Cities"
    "wfs_result_fields" "NAME"
    "gml_include_items" "all"
   END
  TYPE POINT
  STATUS ON
  PROJECTION
    "init=./data/epsg2:42304"
  END

  DUMP TRUE
  LabelItem "Name"
  CLASSITEM "Capital" 

  CLASS
    EXPRESSION /./  
    SYMBOL 2
    SIZE 8
    NAME "Cities"
    LABEL
      COLOR  0 0 0
      FONT Vera
      TYPE truetype
      SIZE 8
      POSITION AUTO			
      PARTIALS FALSE
      OUTLINECOLOR 255 255 255			
    END 
    COLOR 0 0 0
  END
END # Layer


LAYER
  NAME road
  DATA road
  METADATA
    "wfs_title"       "road"
    "wfs_description" "Roads"
    "gml_include_items" "all"
  END
  TYPE LINE
  STATUS ON
  PROJECTION
    "init=./data/epsg2:42304"
  END

  DUMP TRUE

  CLASSITEM "Name_e"
  CLASS
    NAME "Roads"
    SYMBOL 0 
    COLOR 220 0 0
  END
END # Layer

END # Map File
